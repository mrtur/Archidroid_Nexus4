#!/system/bin/sh

#     _             _     _ ____            _     _
#    / \   _ __ ___| |__ (_)  _ \ _ __ ___ (_) __| |
#   / _ \ | '__/ __| '_ \| | | | | '__/ _ \| |/ _` |
#  / ___ \| | | (__| | | | | |_| | | | (_) | | (_| |
# /_/   \_\_|  \___|_| |_|_|____/|_|  \___/|_|\__,_|
#
# Copyright 2014 Łukasz "JustArchi" Domeradzki
# Contact: JustArchi@JustArchi.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

AD="/data/media/0/MrturDroid"
ADSTATUS="/dev/ARCHIDROID_CRON_STATUS"
LOG="$AD/Cron.log"
ADCRON="/dev/archidroid/cron"
EVENTS_DIR="$ADCRON/events"
LISTENERS_DIR="$ADCRON/listeners"
LISTENERS="TETHERING"

PROCESS_WAIT_FOR_FINISH() {
	# Unfortunately I couldn't find a better method for this, sorry
	if [ ! -z "$1" ] && [ -e "/proc/$1" ]; then
		while [ "$(kill -0 "$1" >/dev/null 2>&1; echo $?)" -eq 0 ]; do
			sleep 1
		done
	fi
}

EVENT_TETHERING() {
	echo "CRON: EVENT_TETHERING!" >> "$LOG"
	DNSMASQ_PID=$(pidof dnsmasq)
	echo "EVENT_TETHERING: Detected dnsmasq under PID $DNSMASQ_PID. Turning off ArchiDroid's Adblock" >> "$LOG"
	ARCHIDROID_INIT "STOP" "ADBLOCK"
	EVENT_TETHERING_DNS_DAEMON "$DNSMASQ_PID" &
}

EVENT_TETHERING_DNS_DAEMON() {
	echo "EVENT_TETHERING_DNS_DAEMON: Waiting for PID $1 to finish..." >> "$LOG"
	PROCESS_WAIT_FOR_FINISH "$1"
	echo "EVENT_TETHERING_DNS_DAEMON: PID $1 finished. Reloading ArchiDroid's Adblock..." >> "$LOG"
	ARCHIDROID_INIT "START" "ADBLOCK"
}

EXECUTE_EVENT() {
	for LISTENER in $LISTENERS; do
		if [ -e $EVENTS_DIR/$LISTENER ]; then
			rm -f "$EVENTS_DIR/$LISTENER" # Event is removed right after starting of the action
			case "$LISTENER" in
				"TETHERING") EVENT_TETHERING ;;
			esac
			rm -f "$LISTENERS_DIR/$LISTENER" # Listener is removed right after finishing of the action
			break
		fi
	done
}

LISTEN_EVENTS() {
	while :; do
		inotifywait -qqe create "$EVENTS_DIR"
		EXECUTE_EVENT &
	done
}

# Parse args to variables
BACKGROUND=0
for ARG in "$@"; do
	case "$ARG" in
		"background") BACKGROUND=1 ;;
	esac
done

if [ "$BACKGROUND" -eq 0 ]; then
	$0 "background" "$@" &
fi

echo $$ > "$ADSTATUS"
> "$LOG"
mkdir -p "$EVENTS_DIR" "$LISTENERS_DIR"
echo "CRON: Active listeners: $LISTENERS" >> "$LOG"
LISTEN_EVENTS &

trap "kill 0" SIGINT SIGTERM EXIT

wait
while :; do
	inotifywait -qqe modify "$ADSTATUS"
	if [ "$(cat "$ADSTATUS")" -ne $$ ]; then
		kill 0
	fi
done

exit 0