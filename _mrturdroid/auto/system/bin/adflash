#!/system/bin/sh

#     _             _     _ ____            _     _
#    / \   _ __ ___| |__ (_)  _ \ _ __ ___ (_) __| |
#   / _ \ | '__/ __| '_ \| | | | | '__/ _ \| |/ _` |
#  / ___ \| | | (__| | | | | |_| | | | (_) | | (_| |
# /_/   \_\_|  \___|_| |_|_|____/|_|  \___/|_|\__,_|
#
# Copyright 2014 £ukasz "JustArchi" Domeradzki
# Contact: JustArchi@JustArchi.net
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

VERSION="$1"
NOZIP=0
GITHTTPS=0

if [ -d "/storage/sdcard1/MrturDroid" ]; then
	AD="/storage/sdcard1/MrturDroid"
elif [ -d "/storage/extSdCard/MrturDroid" ]; then
	AD="/storage/extSdCard/MrturDroid"
else
	AD="/data/media/0/MrturDroid"
	NOEXTSD=1
fi
if [ -d "$AD/GitHub" ]; then
	MODE="git"
else
	MODE="direct"
fi

echo "Welcome to MrturDroid Command Line Flasher!"
echo "Detected MrturDroid in $AD"
echo "Checking access to $AD"
mkdir -p "$AD/tmp"
(cd "$AD/tmp" && rm -f test && touch test && rm -f test && echo "Access test passed, we're ready to go!") || (echo "Sorry, access test failed. Make sure that $AD/tmp is not being owned by root or give me root access"; exit 1)

if [ $# -eq 0 ]; then
	echo "Usage: $0 <VERSION>"
	echo
	echo "Available versions:"
	echo "exp -> EXPERIMENTAL"
	echo "stb -> STABLE"

	echo
	printf "Your choice: "
	read VERSION
	echo
	echo
	echo "You may specify any extra options here separated by a whitespace. Eventually you can just skip this question and apply defaults"
	echo
	echo "MrturDroid will prioritize git mode if MrturDroid github repository already exists on your device and eventually fall back to direct, you can override this here"
	echo "Currently using mode: $MODE. If you're satisfied with this mode you can just skip this question"
	echo "git -> Sets up local git repository, which gives you delta upgrades and bandwidth saving"
	echo "direct -> Downloads targeted branch as .zip file directly from github"
	echo "clean -> Cleans everything up, including local repo and tmp folder from MrturDroid directory specified below"
	echo
	if [ $NOEXTSD -eq 0 ]; then
		echo "MrturDroid will prioritize extsd if it contains MrturDroid folder and eventually fall back to intsd, you can override this here"
		echo "Currently using MrturDroid in: $AD. If you're satisfied with this path you can just skip this question"
		echo "extsd -> Use external sd card (/storage/sdcard1 /storage/extSdCard)"
		echo "intsd -> Use internal sd card (/data/media/0)"
		echo
	fi		
	echo "Other selectable options"
	echo "nozip -> Shows changelog and changes only"
	echo "https -> Affects only git mode during cloning (creating repository). This will tell git to use HTTPS instead of GIT protocol which may be faster/slower in some scenarios"
	echo
	echo
	echo "Example: git nozip"
	printf "Your extra options: "
	read EXTRA
	set -- $EXTRA # Yes, we must break on spaces in this case
fi

# Parse extra args
for arg in "$@"; do
	case "$arg" in
		"git")
			MODE="git"
			;;
		"direct")
			MODE="direct"
			;;
		"clean")
			MODE="clean"
			;;
		"nozip")
			NOZIP=1
			;;
		"https")
			GITHTTPS=1
			;;
		"intsd")
			if [ "$AD" != "/data/media/0/MrturDroid" ]; then
				echo "Changing path to internal sd!"
				AD="/data/media/0/MrturDroid"
				mkdir -p "$AD/tmp"
				(cd "$AD/tmp" && rm -f test && touch test && rm -f test && echo "Access test passed, we're ready to go!") || (echo "Sorry, access test failed. Make sure that $AD/tmp is not being owned by root or give me root access"; exit 1)
			fi
			;;
		"extsd")
			if [ "$AD" = "/data/media/0/MrturDroid" ]; then
				echo "Changing path to external sd!"
				if [ -e /storage/sdcard1 ]; then
					AD="/storage/sdcard1/MrturDroid"
				elif [ -e /storage/extSdCard ]; then
					AD="/storage/extSdCard/MrturDroid"
				fi

				if [ "$AD" != "/data/media/0/MrturDroid" ]; then
					mkdir -p "$AD/tmp"
					(cd "$AD/tmp" && rm -f test && touch test && rm -f test && echo "Access test passed, we're ready to go!") || (echo "Sorry, access test failed. Make sure that $AD/tmp is not being owned by root or give me root access"; exit 1)
				else
					echo "Sorry, could not detect any valid path to use"
					echo "You selected extsd, but I failed to use it so I'm aborting here"
					exit 1
				fi
			fi
			;;
		*)
			continue
	esac
done

if [ "$MODE" = "clean" ]; then
	echo "Cleaning..."
	rm -rf "$AD/tmp"
	rm -rf "$AD/GitHub"
	echo "Done, Removed $AD/tmp and $AD/GitHub folders"
	exit 0
fi

case "$VERSION" in
	"exp")
		VERSION="EXPERIMENTAL"
		;;
	"stb")
		VERSION="STABLE"
		;;
	*)
		echo "Sorry, could not detect any valid version, exiting"
		exit 1
esac

echo
echo "Testing your internet connection..."
(curl google.com > /dev/null 2>&1 && echo "Internet test passed successfully!") || (echo "Something went wrong, test returned error code $CHECK"; echo "Sorry but I can't let you pass, either you don't have a valid connection with the internet or required components aren't working properly"; exit 1)

echo "CHANGELOG START"
echo
curl -kLSs "https://raw.github.com/mrtur/MrturDroid/$VERSION/META-INF/com/google/android/aroma/_changelog.txt"
echo
echo
echo "CHANGELOG EOF"

if [ "$MODE" = "direct" ]; then
	if [ "$NOZIP" -eq 1 ]; then
		echo "Nozip detected, finishing!"
		exit 0
	fi
	mkdir -p "$AD/tmp"
	cd "$AD/tmp"
	echo
	echo "Ok, starting download from GitHub"
	echo "Warning, it may take long time. Make sure that you have stable Wi-Fi connection"
	rm -f mrturdroid_github.zip
	curl -Lk "https://github.com/mrtur/MrturDroid/archive/$VERSION.zip" > mrturdroid_github.zip || (echo "Download failed, please try again"; rm -f archidroid_github.zip; exit 1)
	echo "Download completed, it took some time..."

	if [ ! -f mrturdroid_github.zip ]; then
		echo "Couldn't find $AD/tmp/mrturdroid_github.zip, aborting"
		exit 1
	fi

	echo "Repacking downloaded MrturDroid"
	echo "Please be patient during next few steps, as repacking may take up to 10-20 minutes at maximum, depending on your I/O speed"
	echo "Unzipping MrturDroid in GitHub version..."
	rm -rf _adflash
	mkdir _adflash
	unzip -q mrturdroid_github.zip -d _adflash || (echo "Unzipping failed, aborting"; exit 1)
	rm -f mrturdroid_github.zip
	cd "_adflash/MrturDroid-$VERSION" || (echo "Something went wrong, aborting"; exit 1)
else
	mkdir -p "$AD/GitHub"
	echo "Booting pocket debian..."
	adlinux "default"
	
	echo "Setting up git repository..."
	if [ "$GITHTTPS" -eq 0 ]; then
		debian "cmd" "cd $AD/GitHub && adgithub $VERSION"
	else
		debian "cmd" "cd $AD/GitHub && adgithub $VERSION https"
	fi

	# Expect that repo is ready
	cd "$AD/GitHub/$VERSION" || (echo "Something went wrong, aborting"; exit 1)

	echo "Please be patient during next few steps, as repacking may take up to 10-20 minutes at maximum, depending on your I/O speed"
fi

if [ "$NOZIP" -eq 1 ]; then
	echo "Nozip detected, finishing!"
	exit 0
fi

echo "Zipping MrturDroid to flashable version..."
zip -qry -1 MrturDroid_$VERSION.zip . -x ".git/*" "__screenshots/*" || (echo "Zipping failed, aborting"; exit 1)

rm -f "$AD/MrturDroid_$VERSION.zip"
mv MrturDroid_$VERSION.zip "$AD/MrturDroid_$VERSION.zip"
echo "Done, you can find your flashable rom in $AD/MrturDroid_$VERSION.zip"

if [ "$MODE" = "direct" ]; then
	rm -rf "$AD/tmp"
fi

echo
printf "Would you like to reboot to recovery now? [Y/n]: "
read CHOICE
if [ "$CHOICE" != "n" ] && [ "$CHOICE" != "N" ]; then
	su -c "reboot recovery" || echo "reboot recovery" | su
else
	echo "Ok, Happy Flashing!"
fi
exit 0
