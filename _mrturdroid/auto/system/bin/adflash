#!/system/bin/sh

VERSION=""
MODE="git"
TEMP=""
AD="/data/media/0/MrturDroid"
NOZIP=0

echo "Welcome to MrturDroid Command Line Flasher!"
echo "Checking access to $AD"
mkdir -p $AD/tmp
cd $AD/tmp && rm -f test && touch test && rm -f test
CHECK1=$?
if [ $CHECK1 -ne 0 ]; then
	echo "Sorry, access test failed. Make sure that $AD/tmp is not being owned by root or give me root access"
	exit 1
else
	echo "Access test passed, we're ready to go!"
fi

if [ $# -eq 0 ]; then
	echo "Usage: $0 <VERSION>"
	echo ""
	echo "Available versions:"
	echo "s -> Slim"
	echo "sw -> Slim_work"
	echo ""
	echo -n "Your choice: "
	read VERSION
	echo ""
	echo ""
	echo "You may specify any extra options here separated by a whitespace. Eventually you can just skip this question and apply defaults"
	echo ""
	echo "git			[Default] Sets up local git repository, which gives you delta upgrades and bandwidth saving"
	echo "direct		Downloads targeted branch as .zip file directly from github"
	echo ""
	echo "nozip			Shows changelog and changes only"
	echo ""
	echo -n "Your extra options: "
	read EXTRA
else
	VERSION="$1"
	shift 1
	EXTRA="$@"
fi

case "$VERSION" in
	"s")
		VERSION="Slim"
		;;
	"sw")
		VERSION="Slim_work"
		;;
	*)
		echo "Sorry, could not detect any valid version, exiting"
		exit 1
esac
echo "Ok, detected $VERSION"

# Parse extra args
for arg in $EXTRA; do
	case "$arg" in
		"git")
			MODE="git"
			;;
		"direct")
			MODE="direct"
			;;
		"nozip")
			NOZIP=1
			;;
		*)
			continue
	esac
done
if [ "$MODE" == "direct" ]; then
	cd $AD/tmp
	echo ""
	echo "Testing your internet connection..."
	curl google.com > /dev/null 2>&1
	CHECK=$?
	if [ $CHECK -ne 0 ]; then
		echo "Something went wrong, test returned error code $CHECK."
		echo "Sorry but I can't let you pass, either you don't have a valid connection with the internet or required components aren't working properly"
		exit 1
	else
		echo "Test passed successfully!"
		echo ""
	fi
	echo "CHANGELOG START"
	echo ""
	curl -kSs https://raw.github.com/mrtur/MrturDroid/$VERSION/META-INF/com/google/android/aroma/_changelog.txt
	echo ""
	echo ""
	echo "CHANGELOG EOF"
	if [ $NOZIP -eq 1 ]; then
		echo "Nozip detected, finishing!"
		exit 0
	fi
	echo ""
	echo "Ok, starting download from GitHub"
	echo "Warning, it may take long time. Make sure that you have stable Wi-Fi connection"
	echo ""
	TEMP=`curl -kISs https://codeload.github.com/mrtur/MrturDroid/zip/$VERSION | grep "Content-Length" | awk '{print $2}'`
	if [ ! -z "$TEMP" ]; then
		TEMP=`expr $TEMP / 1048576`
		echo "It's about $TEMP Megabytes"
	else
		echo "Couldn't retrieve remote MrturDroid size, sorry"
	fi
	echo ""
	TEMP=""
	echo "Downloading right now..."
	rm -f mrturdroid_github.zip
	curl -Sk https://codeload.github.com/mrtur/MrturDroid/zip/$VERSION > mrturdroid_github.zip
	echo "Download completed, it took some time..."

	if [ ! -e mrturdroid_github.zip ]; then
		echo "Couldn't find $AD/tmp/mrturdroid_github.zip, aborting"
		exit 1
	fi

	echo "Repacking downloaded MrturDroid"
	echo "Unzipping MrturDroid in GitHub version"
	rm -rf _adflash
	mkdir _adflash

	unzip -q mrturdroid_github.zip -d _adflash
	if [ $? -ne 0 ]; then
		echo "Unzipping failed, aborting"
		exit 1
	fi

	cd _adflash/MrturDroid-$VERSION
	if [ $? -ne 0 ]; then
		echo "Something went wrong, aborting"
		exit 1
	fi
else
	echo "Booting pocket debian..."
	adlinux "default"
	
	echo "Setting up git repository..."
	debian "cmd" "cd $AD/GitHub && bash github.sh $VERSION"
	
	# Expect that repo is ready
	cd $AD/GitHub/$VERSION
	if [ $? -ne 0 ]; then
		echo "Something went wrong, aborting"
		exit 1
	fi
fi

if [ $NOZIP -eq 1 ]; then
	echo "Nozip detected, finishing!"
	exit 0
fi

echo "Zipping MrturDroid to flashable version..."
zip -qry -1 MrturDroid_$VERSION.zip . -x ".git/*" "__screenshots/*"
if [ $? -ne 0 ]; then
	echo "Zipping failed, aborting"
	exit 1
fi
	
rm -f $AD/MrturDroid_$VERSION.zip
mv MrturDroid_$VERSION.zip $AD/MrturDroid_$VERSION.zip
echo "Done, you can find your flashable rom in $AD/MrturDroid_$VERSION.zip"

if [ "$MODE" == "direct" ]; then
	cd $AD/tmp && rm -rf *
fi

echo ""
echo -n "Would you like to reboot to recovery now? [y/n]: "
read CHOICE
if [ "$CHOICE" == "y" ]; then
	su -c "reboot recovery" || echo "reboot recovery" | su
else
	echo "Ok, Happy Flashing!"
fi
exit 0