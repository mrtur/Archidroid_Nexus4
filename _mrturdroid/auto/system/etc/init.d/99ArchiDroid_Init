#!/system/bin/sh

# ArchiDroid Init Script
# JustArchi@JustArchi.net

# Not Disabled
#exit 0

# Initial variables, you should NOT change them unless you know what you're doing
AD="/data/media/0/MrturDroid"
LOG="$AD/Init.log" # "/dev/null" is no verbose


# Redirect stderr to our log, just in case something bad happen
#exec 1>$LOG # Use "exec 1>>$LOG" for append
echo -n "" > $LOG
exec 2>>$LOG

ADARGS() {
	# $1 - what we're looking for
	# $2 - where we're looking for
	if [ ! -z `echo "$2" | grep -i "$1"` ]; then
		return 0
	else
		return 1
	fi
}

# Parse args to variables
if ADARGS "background" "$@" ; then
	BACKGROUND=1
else
	BACKGROUND=0
fi
if ADARGS "force" "$@" ; then
	FORCE=1
else
	FORCE=0
fi

echo "`date`" >> $LOG
echo "`uname -a`" >> $LOG
echo "INFO: ArchiDroid_Init executed!" >> $LOG

if [ -e /system/etc/init.d/98ArchiDroid_RunOnce ] && [ $FORCE -ne 1 ]; then
	# This is our first boot, don't call init yet
	echo "INFO: This is our first boot, I'll let RunOnce finish his job, exiting..." >> $LOG
	exit 2
fi

# Now we need to make sure that this is background process to prevent slowing down bootup
if [ $BACKGROUND -ne 1 ]; then
	# We're not running in background, let's start a child and tell him that he's running in background
	echo "INFO: Spawning child!" >> $LOG
	sh $0 "background" &
	
	# Nothing to do here anymore, exit call
	exit 1
else
	# We're running in background so let's proceed
	echo "INFO: I'm a child!" >> $LOG
fi


# Zipalign, disabled for a while
if [ $ROM -eq 9 ]; then #Always false
	echo "INFO: Performing ZIPALIGN of apks" >> $LOG
	for apk in /data/app/*.apk ; do
		zipalign -c 4 $apk;
		ZIPCHECK=$?;
		if [ $ZIPCHECK -eq 1 ]; then
			zipalign -f 4 $apk /cache/$(basename $apk)
			if [ -e /cache/$(basename $apk) ]; then
				cp -f /cache/$(basename $apk) $apk
				rm -f /cache/$(basename $apk)
				busybox chmod 644 $apk
			fi
		fi
	done
fi

# ArchiDroid Semaphore
# Wait until we see some android processes to consider boot is more or less complete (credits to AndiP71)
# Also respect number of loops, maybe something went wrong
echo "INFO: Init Semaphore started" >> $LOG
LOOP=0
while ! pgrep com.android && [ $LOOP -lt 150 ] ; do

	LOOP=`expr $LOOP + 1`
	sleep 2
done

if [ $LOOP -ge 150 ]; then
	echo "ERROR: I looped $LOOP times and needed to exit from infinite loop, not good (Init Semaphore)" >> $LOG
else
	echo "INFO: I looped $LOOP times and didn't have to exit from infinite loop, that's nice (Init Semaphore)" >> $LOG
fi


# Execute a reboot if we need it
if [ -e $AD/HARD_REBOOT_REQUIRED ]; then
	echo "INFO: HARD_REBOOT_REQUIRED found, I'm rebooting device now..." >> $LOG
	rm -f $AD/SOFT_REBOOT_REQUIRED
	rm -f $AD/HARD_REBOOT_REQUIRED
	reboot
elif [ -e $AD/SOFT_REBOOT_REQUIRED ]; then
	echo "INFO: SOFT_REBOOT_REQUIRED found, I'm rebooting android interface now..." >> $LOG
	rm -f $AD/SOFT_REBOOT_REQUIRED
	killall system_server
fi

# Finish
echo "INFO: ArchiDroid Init finished" >> $LOG
echo "`date`" >> $LOG


# Finish
exit 0