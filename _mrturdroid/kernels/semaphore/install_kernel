#!/tmp/busybox sh

cd /tmp

# Extract boot.img from boot partition
./busybox dd if=/dev/block/mmcblk0p6 of=/tmp/boot.img

# Unpack boot.img
./unpackbootimg -i /tmp/boot.img -o /tmp/

# Extract initramfs
mkdir /tmp/initramfs
cd ./initramfs/
../busybox gunzip -c ../boot.img-ramdisk.gz | ../busybox cpio -i

# Inject Semaphore changes

if grep -q semaboot init.rc; then
	echo "Initramfs is already patched"
else

mpdline=`../busybox sed -n '/service mpdec/ =' init.mako.rc `
mpdline2=`../busybox expr $mpdline + 1`

../busybox sed "$mpdline,$mpdline2 d" -i init.mako.rc

../busybox sed "1,/on charger/ s/scaling_governor.*/scaling_governor \"ondemand\"/" -i init.mako.rc
../busybox sed "1,/on charger/ s/up_threshold.*/up_threshold 95/" -i init.mako.rc
../busybox sed "1,/on charger/ s/sampling_rate.*/sampling_rate 20000/" -i init.mako.rc
../busybox sed "1,/on charger/ s/io_is_busy.*/io_is_busy 1/" -i init.mako.rc
../busybox sed "1,/on charger/ s/sampling_down_factor.*/sampling_down_factor 4/" -i init.mako.rc

../busybox sed -e '
s/on post-fs-data/&\n    insmod \/data\/local\/logger.ko\n/
s/    class_start core/    start semaboot\n\n    start mpd_fake\n    chown system system \/dev\/socket\/pb\n    chmod 0660 \/dev\/socket\/pb\n\n&/
s/service ueventd \/sbin\/ueventd/service semaboot \/sbin\/sema-boot.sh\n    user root\n    oneshot\n    disabled\n\nservice mpd_fake \/mpdfake\n    user root\n    group system\n    socket pb stream 660 root system\n    class main\n\n&/' -i init.rc

# Copy sema-boot
cp ../sema-boot.sh sbin/
chmod 750 sbin/sema-boot.sh

fi

# We may inject this change anyway
../busybox sed "s/chmod 0660 \/sys\/devices\/system\/cpu\/cpu0\/cpufreq\/scaling_max_freq/chmod 0664 \/sys\/devices\/system\/cpu\/cpu0\/cpufreq\/scaling_max_freq/" -i init.rc

# Copy lib/modules
cp -r ../lib/ ./
../busybox chown -R root.root ./lib/

# Copy mpdface
cp ../mpdfake ./
../busybox chown root.system ./mpdfake
../busybox chmod 750 ./mpdfake

# Repack initramfs
../busybox find . | ../busybox cpio -o -H newc | ../busybox gzip > ../newramdisk.gz

# Make new boot.img
cd ../

CMD="./mkbootimg --kernel ./zImage --ramdisk ./newramdisk.gz --cmdline \"$(cat /tmp/boot.img-cmdline)\" --base 0x$(cat /tmp/boot.img-base) --pagesize 2048 --ramdiskaddr 0x81800000 --output ./newboot.img"
eval $CMD

# Flash the new boot.img
./busybox dd if=/tmp/newboot.img of=/dev/block/mmcblk0p6
