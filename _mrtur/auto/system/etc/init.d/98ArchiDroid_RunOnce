#!/system/bin/sh

# ArchiDroid RunOnce (Backend) Script
# JustArchi@JustArchi.net

# Not Disabled
#exit 0

# Initial variables, you should NOT change them unless you know what you're doing
AD="/data/media/0/ArchiDroid"
LOG="$AD/RunOnce.log" # "/dev/null" is no verbose

# mrtur preset=0
SAMMY=0
# Redirect stderr to our log, just in case something bad happen
#exec 1>$LOG # Use "exec 1>>$LOG" for append
echo -n "" > $LOG
exec 2>>$LOG


# Main code

DBUPDATE() {
	# Thanks to idcrisis, modified by JustArchi
	WHAT=$1
	VARIABLE=$2
	VAL=$3
	DONE=0
	TRY=0
	SQLITE3='/system/xbin/sqlite3'

	while [ $DONE -ne 1 ] ; do
		TRY=`expr $TRY + 1`
		# Try to update value first if exists
		busybox sync
		CHECK=`$SQLITE3 /data/data/com.android.providers.settings/databases/settings.db "update $WHAT set value='$VAL' where name='$VARIABLE';" 2>/dev/null`
		busybox sync
		
		# See if it worked
		VAL1=""
		VAL1=`$SQLITE3 /data/data/com.android.providers.settings/databases/settings.db "select value from $WHAT where name='$VARIABLE';" 2>/dev/null`
		
		# If not create it
		if [ "$VAL1" != "" ]; then
			# Looks good
			DONE=1
			return 0
		else
			#ID=""
			#ID=`sqlite3 /data/data/com.android.providers.settings/databases/settings.db "select max(_id)+100 from $WHAT;"`
			#if [ "$ID" == "" ]; then 
			#	ID='null'
			#fi
			ID='null'

			CHECK=`$SQLITE3 /data/data/com.android.providers.settings/databases/settings.db "insert into $WHAT values($ID, '$VARIABLE', '$VAL');" 2>/dev/null`
			busybox sync
		fi
		
		# Check if in fact we modified that
		VAL1=`$SQLITE3 /data/data/com.android.providers.settings/databases/settings.db "select value from $WHAT where name='$VARIABLE';" 2>/dev/null`
		if [ "$VAL1" != "" ]; then
			# Looks good
			if [ $TRY -gt 1 ]; then
				echo "INFO: DBUPDATE SUCCEEDED with $WHAT $VARIABLE $VAL. It was our $TRY try" >> $LOG
			fi
			DONE=1
			return 0
		else
			# We failed, let's try maximum of 3 times before giving up
			echo "WARNING: DBUPDATE() FAILED with $WHAT $VARIABLE $VAL. This is our $TRY try" >> $LOG
			sleep 1
			if [ $TRY -ge 5 ]; then
				echo "ERROR: Could not update $WHAT $VARIABLE $VAL after $TRY times. I'm giving up here, please investigate!" >> $LOG
				DONE=1
				return 1
			fi
		fi
	done
}

echo "`date`" >> $LOG
echo "`uname -a`" >> $LOG
echo "INFO: ArchiDroid_RunOnce executed!" >> $LOG

# Now we need to make sure that this is background process to prevent slowing down bootup
if [ ! -e $AD/RUNONCE_BACKGROUND ]; then
	# We're not running in background, let's start a child and tell him that he's running in background
	# Clean old log and write initial information
	echo "INFO: Spawning child!" >> $LOG
	touch $AD/RUNONCE_BACKGROUND
	sh $0 &

	# Nothing to do here anymore, exit call
	exit 1
else
	# We're running in background so let's proceed
	echo "INFO: I'm a child!" >> $LOG
	rm -f $AD/RUNONCE_BACKGROUND
fi

# We don't need to reload anything for now
ADRELOAD=0

# Cool ArchiDroid Banner
if [ -e /system/bin/boot-dmesg ]; then
	echo "INFO: boot-dmesg detected, turning on logcat banner" >> $LOG
	ADBANNER=1
else
	echo "INFO: boot-dmesg NOT detected, turning off logcat banner" >> $LOG
	ADBANNER=0
fi

# Don't force install mode, unless FORCE file exists
if [ -e $AD/FORCE ]; then
	echo "WARNING: Forcing Install mode, even if Update mode found!" >> $LOG
	FORCE=1
else
	echo "INFO: Not forcing Install mode if Update mode found" >> $LOG
	FORCE=0
fi

# We want some sqlite3 updates and settings but only if INSTALL mode is enabled
if [ -e $AD/INSTALL ] || [ $FORCE -eq 1 ]; then
	echo "INFO: Install mode detected, I'm either after full wipe or forced to think so. Turning on ADMANY and DBUPDATE" >> $LOG
	if [ -d $AD/FIRSTBOOT/DATA ]; then
		cd $AD/FIRSTBOOT/DATA
		ADMANY=`ls | wc -l`
	else
		ADMANY=0
	fi
	echo "INFO: I found $ADMANY folders which need merging (data)" >> $LOG
	DBUPDATE=1
	ADRELOAD=1
elif [ -e $AD/UPDATE ]; then
	echo "INFO: Update mode detected. Turning off ADMANY and DBUPDATE" >> $LOG
	DBUPDATE=0
	ADMANY=0
else
	# Panic
	echo "FATAL ERROR: Could not detect Install/Update mode, ABORTING RUNONCE, PLEASE INVESTIGATE" >> $LOG
	exit 2
fi

# ArchiDroid Semaphore
# Wait until we see some android processes to consider boot is more or less complete (credits to AndiP71)
# Also respect number of loops, maybe something went wrong
echo "INFO: RunOnce Semaphore started" >> $LOG
LOOP=0
while ! pgrep com.android && [ $LOOP -lt 150 ] ; do

	if [ $ADBANNER -eq 1 ]; then
		echo "
*******************************************************************************
*             _                _      _  ____               _      _          *
*            / \    _ __  ___ | |__  (_)|  _ \  _ __  ___  (_)  __| |         *
*           / _ \  | '__|/ __|| '_ \ | || | | || '__|/ _ \ | | / _\` |         *
*          / ___ \ | |  | (__ | | | || || |_| || |  | (_) || || (_| |         *
*         /_/   \_\|_|   \___||_| |_||_||____/ |_|   \___/ |_| \__,_|         *
*                                                                             *
*******************************************************************************
*                  _                       _  _                               *
*                 | |     ___    __ _   __| |(_) _ __    __ _                 *
*                 | |    / _ \  / _\` | / _\` || || '_ \  / _\` |                *
*                 | |___| (_) || (_| || (_| || || | | || (_| |                *
*                 |_____|\___/  \__,_| \__,_||_||_| |_| \__, |                *
*                                                       |___/                 *
*******************************************************************************
*            root@ArchiDroid:~# Waiting for ArchiDroid to load...             *
*******************************************************************************
"
	fi
	
	if [ $DBUPDATE -eq 1 ]; then
		if [ -e /data/data/com.android.providers.settings/databases/settings.db ]; then
			echo "INFO: Android created settings.db for me, how cute! Performing DBUPDATE" >> $LOG

			if [ $SAMMY -eq 1 ]; then
				echo "INFO: Applying standard preset DBUPDATE" >> $LOG
			DBUPDATE secure advanced_reboot 1
			
			DBUPDATE global transition_animation_scale 0.5
			DBUPDATE global animator_duration_scale 0.5
			DBUPDATE global window_animation_scale 0.5
			DBUPDATE global wifi_scan_always_enabled 0
			DBUPDATE global install_non_market_apps 1
			DBUPDATE global development_settings_enabled 1
			#DBUPDATE system lockscreen_ripple_effect 0
			#DBUPDATE system screen_mode_automatic_setting 0
			#DBUPDATE system screen_mode_setting 2
			
			else
				echo "INFO: Applying mrtur preset DBUPDATE" >> $LOG
				
			# ==== mrtur =====
			
			DBUPDATE system accelerometer_rotation 0
			DBUPDATE system auto_brightness_backlight '4,6,37,51,71,80,96,108,254,254,255,255'
			DBUPDATE system auto_brightness_lux '10,50,100,200,400,500,800,1000,1600,3000,10000'
			DBUPDATE system auto_brightness_responsiveness 0.25
			DBUPDATE system dtmf_tone 0
			DBUPDATE system haptic_feedback_enabled 0
			DBUPDATE system hide_rotation_lock_toggle_for_accessibility 1
			DBUPDATE system lockscreen_alpha 0.0
			DBUPDATE system lockscreen_sounds_enabled 0
			DBUPDATE system navigation_bar_alpha 0.0
			DBUPDATE system navigation_bar_button_alpha 0.45
			DBUPDATE system navigation_bar_glow_duration_off 25
			DBUPDATE system navigation_bar_glow_duration_on 250
			DBUPDATE system notif_alpha 0.0
			DBUPDATE system notif_wallpaper_alpha 0.1
			DBUPDATE system notification_settings_btn 1
			DBUPDATE system power_menu_airplane_enabled 0
			DBUPDATE system power_menu_screenshot_enabled 1
			DBUPDATE system power_ui_low_battery_warning_policy 1
			#DBUPDATE system recents_ram_bar_active_apps_color -13388315
			#DBUPDATE system recents_ram_bar_cache_color -16733696
			#DBUPDATE system recents_ram_bar_mem_color -7500403
			DBUPDATE system recents_ram_bar_mode 0
			DBUPDATE system screen_off_timeout 120000
			DBUPDATE system show_touches 0
			DBUPDATE system sound_effects_enabled 0
			DBUPDATE system status_bar_battery 1
			DBUPDATE system statusbar_battery_bar 0
			DBUPDATE system statusbar_clock_date_display 1
			DBUPDATE system statusbar_clock_date_format 'EEE dd MMM'
			DBUPDATE system statusbar_clock_style 1
			DBUPDATE system DBUPDATE system_power_enable_crt_off 0
			DBUPDATE system DBUPDATE system_profiles_enabled 0
			DBUPDATE system DBUPDATE systemui_navbar_config '**recents**|**null**|empty|**home**|**null**|empty|**back**|**null**|empty'
			DBUPDATE system ui_force_overflow_button 0
			DBUPDATE system user_rotation 0
			DBUPDATE system vibrate_when_ringing 1
			DBUPDATE system vibrate_while_no_alerts 1
			DBUPDATE system volume_alarm_speaker 7
			DBUPDATE system volume_music_speaker 12
			DBUPDATE system volume_ring_earpiece 5
			DBUPDATE system volume_ring_speaker 7
			DBUPDATE system volume_voice_earpiece 2
			DBUPDATE system wakeup_when_plugged_unplugged 0
			DBUPDATE system window_animation_scale 1.0
			DBUPDATE secure accessibility_display_magnification_auto_update 1
			#DBUPDATE secure accessibility_enabled 1
			#DBUPDATE secure advanced_reboot 1
			#DBUPDATE secure android_id 84a58a8883be2376
			#DBUPDATE secure kill_app_longpress_back 1
			#DBUPDATE secure lockscreen_unDBUPDATE secure_used -1
			DBUPDATE global animator_duration_scale 0.0
			DBUPDATE global bluetooth_on 1
			DBUPDATE global package_verifier_enable 0
			DBUPDATE global transition_animation_scale 0.0
			DBUPDATE global wifi_on 0
			DBUPDATE global window_animation_scale 0.0
				
			# Requires SlimBean's Dark Droid
			#DBUPDATE secure ui_inverted_mode 2
			#DBUPDATE secure kill_app_longpress_back 1
			#DBUPDATE system power_menu_screenshot_enabled 1
			#DBUPDATE system status_bar_battery 3
			#DBUPDATE system statusbar_clock_date_display 2
			#DBUPDATE system statusbar_clock_date_format 'MMM dd'
			#DBUPDATE system status_bar_traffic 0
			#DBUPDATE system button_backlight_timeout 1000
			#DBUPDATE system recents_clear_all_on_right 1
			#DBUPDATE system recents_ram_bar_mode 3
			
			# Reguires AOKP Custom Animations
			#DBUPDATE system animation_controls_no_override 1
			#DBUPDATE system animation_controls_duration 34
			#DBUPDATE system task_open 8
			#DBUPDATE system task_close 8
			#DBUPDATE system task_to_front 8
			#DBUPDATE system task_to_back 8
			#DBUPDATE system wallpaper_open 8
			#DBUPDATE system wallpaper_close 8
			#DBUPDATE system wallpaper_intra_open 8
			#DBUPDATE system wallpaper_intra_close 8
			#DBUPDATE system activity_open 8
			#DBUPDATE system activity_close 8
			
			# Requires ListView Animations
			#DBUPDATE system listview_animation 4
			#DBUPDATE system listview_interpolator 5
			fi
			
			# And don't execute twice
			echo "INFO: Finished DBUPDATE" >> $LOG
			DBUPDATE=0
		fi
	fi
	
	# Now let's MAKE SURE that our settings are in fact applied, only if we don't have shared_prefs already (prevent non-clean override)
	if [ $ADMANY -gt 0 ]; then
		cd $AD/FIRSTBOOT/DATA
		for FOLDER in * ; do
			if [ -d /data/data/$FOLDER ]; then
				echo "INFO: I'm merging $FOLDER, called by ADMANY" >> $LOG
				ADOWNER=`ls -ld /data/data/$FOLDER | awk '{print $3}'`
				mkdir /data/data/$FOLDER/_ADTEMP
				cp -R $FOLDER/* /data/data/$FOLDER/_ADTEMP/
				
				# I hate using implementations like this one, our shell is very limited. Forgive me
				echo "cd /data/data/$FOLDER/_ADTEMP && cp -R * .." | su "$ADOWNER"
				
				if [ $? -eq 0 ]; then
					echo "INFO: It looks like everything ended successfully on $FOLDER" >> $LOG
				else
					echo "ERROR: su failed on $FOLDER, falling back to dirty chmod 777, please investigate" >> $LOG
					cd /data/data/$FOLDER/_ADTEMP && cp -R * .. && cd $AD/FIRSTBOOT/DATA
					busybox chmod -R 777 /data/data/$FOLDER/*
				fi

				# And we're done!
				rm -Rf $FOLDER
				rm -Rf /data/data/$FOLDER/_ADTEMP
				ADOWNER=""
				ADMANY=`ls | wc -l`
				echo "INFO: $ADMANY to go" >> $LOG
			fi
		done
		#ADMANY=`ls | wc -l`
	fi

	# Sleeping time
	LOOP=`expr $LOOP + 1`
	sleep 2
done

if [ $LOOP -ge 150 ]; then
	echo "ERROR: I looped $LOOP times and needed to exit from infinite loop, not good (RunOnce Semaphore)" >> $LOG
else
	echo "INFO: I looped $LOOP times and didn't have to exit from infinite loop, that's nice (RunOnce Semaphore)" >> $LOG
fi

# Now that is checked, let's just wait another tiny little bit
sleep 8

# If we have any more runonce scripts then it's the right place for that

# I'm runonce script so let's clean everything and delete myself

# NOTICE
# ArchiDroid has sysro/sysrw support, change that to remount system rw if needed
rm -f $AD/INSTALL
rm -f $AD/UPDATE
rm -f $AD/FORCE
rm -Rf $AD/FIRSTBOOT
rm -Rf /data/media/0/vrtheme-backup
sysrw
rm -f $0
busybox sync
sysro

if [ ! -e "$0" ]; then
	echo "INFO: Could not detect RunOnce in init.d after cleanup, that's good" >> $LOG
else
	echo "ERROR: I've detected RunOnce still in init.d after cleanup, that's not good, please investigate" >> $LOG
fi

# Execute hot reboot if we need it
if [ $ADRELOAD -eq 1 ]; then
	echo "INFO: Hot reboot required, I'm killing system_server right now." >> $LOG
	# Finish
	echo "INFO: ArchiDroid RunOnce finished" >> $LOG
	echo "`date`" >> $LOG
	busybox sync
	#reboot
	killall system_server
else
	# Finish
	echo "INFO: ArchiDroid RunOnce finished" >> $LOG
	echo "`date`" >> $LOG
fi
exit 0
