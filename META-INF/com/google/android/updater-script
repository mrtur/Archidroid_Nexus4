ui_print("#########################################################");
ui_print("#<#1082ac>  __  __      _              ____            _     _   </#>#");
ui_print("#<#1082ac> |  \/  |_ __| |_ _   _ _ __|  _ \ _ __ ___ (_) __| |  </#>#");
ui_print("#<#1082ac> | |\/| | '__| __| | | | '__| | | | '__/ _ \| |/ _` |  </#>#");
ui_print("#<#1082ac> | |  | | |  | |_| |_| | |  | |_| | | | (_) | | (_| |  </#>#");
ui_print("#<#1082ac> |_|  |_|_|   \__|\__,_|_|  |____/|_|  \___/|_|\__,_|  </#>#");
ui_print("#<#1082ac>                                                       </#>#");
ui_print("#########################################################");
#sleep (1);
(getprop("ro.product.device") == "mako" || getprop("ro.build.product") == "mako") || abort("This package is for \"mako\" devices; this is a \"" + getprop("ro.product.device") + "\".");
ui_print("<b><#1082ac> MrturDroid ~</#></b> Ready!");
set_progress(0.01);
#sleep (2);
################
### RECOVERY ###
################

### TWRP ###
if file_getprop("/tmp/aroma-data/mrturdroidrecovery.prop","recovery") == "twrp" then
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing TWRP Recovery");
	assert(package_extract_file("_mrturdroid/recovery/twrp.img", "/tmp/recovery.img"),write_raw_image("/tmp/recovery.img", "/dev/block/mmcblk0p7"),delete("/tmp/recovery.img"));
endif;
### CWM ###
if file_getprop("/tmp/aroma-data/mrturdroidrecovery.prop","recovery") == "cwm" then
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing ClockWorkMod Recovery");
	assert(package_extract_file("_mrturdroid/recovery/cwm.img", "/tmp/recovery.img"),write_raw_image("/tmp/recovery.img", "/dev/block/mmcblk0p7"),delete("/tmp/recovery.img"));
endif;

if file_getprop("/tmp/aroma-data/mrturdroidrecovery.prop","recovery") == "none" then
	### MRTURDROID TOOLS ###
	package_extract_file("_mrturdroid/exec/adlock.sh", "/tmp/adlock.sh");
	set_perm(0, 0, 0777, "/tmp/adlock.sh");

	set_progress(0.02);

	if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "no" && file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") != "barebones" then
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Backing up all addons");
		package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
		package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
		set_perm(0, 0, 0777, "/tmp/backuptool.sh");
		set_perm(0, 0, 0644, "/tmp/backuptool.functions");
		run_program("/tmp/backuptool.sh", "backup");
	endif;

	set_progress(0.03);

	### UNLOCK ###
	run_program("/tmp/adlock.sh", "unlock", "/system/etc/hosts");

	ui_print("<b><#1082ac> MrturDroid ~</#></b> Formatting Partitions");
	delete_recursive("/system");

	set_progress(0.07);

	if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "yes" then
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Formatting /data excluding /data/media");
		package_extract_file("_mrturdroid/exec/wipe.sh", "/tmp/wipe.sh");
		set_perm(0, 0, 0777, "/tmp/wipe.sh");
		run_program("/tmp/wipe.sh");
		delete("/tmp/wipe.sh");
	endif;

	set_progress(0.08);

	if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "no" then
		ui_print("<b><#1082ac> MrturDroid ~</#></b> wipe cache, dalvik cache, resource cache");
		delete_recursive("/data/dalvik-cache");
		delete_recursive("/dalvik/dalvik-cache");
		delete_recursive("/data/resource-cache");
	endif;

	ui_print("<b><#1082ac> MrturDroid ~</#></b> Executing Archi's Scripts");
	package_extract_file("_mrturdroid/exec/archidroid.sh", "/tmp/archidroid.sh");
	set_perm(0, 0, 0777, "/tmp/archidroid.sh");


	if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "yes" then
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Install Mode Detected");
		run_program("/tmp/archidroid.sh", "INSTALL");
	else
		if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","force") == "no" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Update Mode Detected");
			run_program("/tmp/archidroid.sh", "UPDATE");
		else
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Forced Update Mode Detected");
			run_program("/tmp/archidroid.sh", "UPDATE", "FORCE");
		endif;
		delete("/tmp/archidroid.sh");
	endif;

	set_progress(0.1);

	ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing MrturDroid Core");
	show_progress(0.4, 1212);
	package_extract_dir("system", "/system");
	if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
		ui_print("<#1082ac> mrtur ~</#> Flashing mrtur's Core");
		#delete_recursive("/system/media/video");
		#delete_recursive("/system/media/audio/alarms");
		#delete_recursive("/system/media/audio/ui");
		#delete_recursive("/system/media/audio/ringtones");
		#delete_recursive("/system/media/audio/notifications");
		package_extract_dir("_mrtur/system", "/system");
	endif;

	run_program("/sbin/sync");
	set_progress(0.51);

	ui_print("<b><#1082ac> MrturDroid ~</#></b> Creating symlinks");

	symlink("../xbin/su", "/system/bin/su");
	symlink("/data/misc/audio/mbhc.bin", "/system/etc/firmware/wcd9310/wcd9310_mbhc.bin");
	symlink("/data/misc/audio/wcd9310_anc.bin", "/system/etc/firmware/wcd9310/wcd9310_anc.bin");
	symlink("/data/misc/wifi/WCNSS_qcom_cfg.ini", "/system/vendor/firmware/wlan/prima/WCNSS_qcom_cfg.ini");
	symlink("/data/misc/wifi/WCNSS_qcom_wlan_nv.bin", "/system/vendor/firmware/wlan/prima/WCNSS_qcom_wlan_nv.bin");
	symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
	symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
	symlink("busybox", "/system/xbin/[", "/system/xbin/[[",
			"/system/xbin/adjtimex", "/system/xbin/arp", "/system/xbin/ash",
			"/system/xbin/awk", "/system/xbin/base64", "/system/xbin/basename",
			"/system/xbin/bbconfig", "/system/xbin/blkid", "/system/xbin/blockdev",
			"/system/xbin/brctl", "/system/xbin/bunzip2", "/system/xbin/bzcat",
			"/system/xbin/bzip2", "/system/xbin/cal", "/system/xbin/cat",
			"/system/xbin/catv", "/system/xbin/chattr", "/system/xbin/chgrp",
			"/system/xbin/chmod", "/system/xbin/chown", "/system/xbin/chroot",
			"/system/xbin/clear", "/system/xbin/cmp", "/system/xbin/comm",
			"/system/xbin/cp", "/system/xbin/cpio", "/system/xbin/crond",
			"/system/xbin/crontab", "/system/xbin/cut", "/system/xbin/date",
			"/system/xbin/dc", "/system/xbin/dd", "/system/xbin/depmod",
			"/system/xbin/devmem", "/system/xbin/df", "/system/xbin/diff",
			"/system/xbin/dirname", "/system/xbin/dmesg", "/system/xbin/dnsd",
			"/system/xbin/dos2unix", "/system/xbin/du", "/system/xbin/echo",
			"/system/xbin/ed", "/system/xbin/egrep", "/system/xbin/env",
			"/system/xbin/expand", "/system/xbin/expr", "/system/xbin/false",
			"/system/xbin/fbsplash", "/system/xbin/fdisk", "/system/xbin/fgrep",
			"/system/xbin/find", "/system/xbin/flash_lock",
			"/system/xbin/flash_unlock", "/system/xbin/flashcp",
			"/system/xbin/flock", "/system/xbin/fold", "/system/xbin/free",
			"/system/xbin/freeramdisk", "/system/xbin/fstrim", "/system/xbin/fsync",
			"/system/xbin/ftpget", "/system/xbin/ftpput", "/system/xbin/fuser",
			"/system/xbin/getopt", "/system/xbin/grep", "/system/xbin/groups",
			"/system/xbin/gunzip", "/system/xbin/gzip", "/system/xbin/halt",
			"/system/xbin/head", "/system/xbin/hexdump", "/system/xbin/id",
			"/system/xbin/ifconfig", "/system/xbin/inetd", "/system/xbin/insmod",
			"/system/xbin/install", "/system/xbin/ionice", "/system/xbin/iostat",
			"/system/xbin/ip", "/system/xbin/kill", "/system/xbin/killall",
			"/system/xbin/killall5", "/system/xbin/less", "/system/xbin/ln",
			"/system/xbin/losetup", "/system/xbin/ls", "/system/xbin/lsattr",
			"/system/xbin/lsmod", "/system/xbin/lsusb", "/system/xbin/lzcat",
			"/system/xbin/lzma", "/system/xbin/lzop", "/system/xbin/lzopcat",
			"/system/xbin/man", "/system/xbin/md5sum", "/system/xbin/mesg",
			"/system/xbin/mkdir", "/system/xbin/mke2fs", "/system/xbin/mkfifo",
			"/system/xbin/mkfs.ext2", "/system/xbin/mkfs.vfat",
			"/system/xbin/mknod", "/system/xbin/mkswap", "/system/xbin/mktemp",
			"/system/xbin/modinfo", "/system/xbin/modprobe", "/system/xbin/more",
			"/system/xbin/mount", "/system/xbin/mountpoint", "/system/xbin/mpstat",
			"/system/xbin/mv", "/system/xbin/nanddump", "/system/xbin/nandwrite",
			"/system/xbin/nbd-client", "/system/xbin/netstat", "/system/xbin/nice",
			"/system/xbin/nohup", "/system/xbin/nslookup", "/system/xbin/ntpd",
			"/system/xbin/od", "/system/xbin/patch", "/system/xbin/pgrep",
			"/system/xbin/pidof", "/system/xbin/ping", "/system/xbin/pipe_progress",
			"/system/xbin/pkill", "/system/xbin/pmap", "/system/xbin/poweroff",
			"/system/xbin/printenv", "/system/xbin/printf", "/system/xbin/ps",
			"/system/xbin/pstree", "/system/xbin/pwd", "/system/xbin/pwdx",
			"/system/xbin/rdev", "/system/xbin/readlink", "/system/xbin/realpath",
			"/system/xbin/renice", "/system/xbin/reset", "/system/xbin/resize",
			"/system/xbin/rev", "/system/xbin/rm", "/system/xbin/rmdir",
			"/system/xbin/rmmod", "/system/xbin/route", "/system/xbin/run-parts",
			"/system/xbin/rx", "/system/xbin/sed", "/system/xbin/seq",
			"/system/xbin/setconsole", "/system/xbin/setserial",
			"/system/xbin/setsid", "/system/xbin/sh", "/system/xbin/sha1sum",
			"/system/xbin/sha256sum", "/system/xbin/sha3sum",
			"/system/xbin/sha512sum", "/system/xbin/sleep", "/system/xbin/sort",
			"/system/xbin/split", "/system/xbin/stat", "/system/xbin/strings",
			"/system/xbin/stty", "/system/xbin/sum", "/system/xbin/swapoff",
			"/system/xbin/swapon", "/system/xbin/sync", "/system/xbin/sysctl",
			"/system/xbin/tac", "/system/xbin/tail", "/system/xbin/tar",
			"/system/xbin/taskset", "/system/xbin/tee", "/system/xbin/telnet",
			"/system/xbin/telnetd", "/system/xbin/test", "/system/xbin/tftp",
			"/system/xbin/tftpd", "/system/xbin/time", "/system/xbin/timeout",
			"/system/xbin/top", "/system/xbin/touch", "/system/xbin/tr",
			"/system/xbin/traceroute", "/system/xbin/true", "/system/xbin/ttysize",
			"/system/xbin/tune2fs", "/system/xbin/umount", "/system/xbin/uname",
			"/system/xbin/uncompress", "/system/xbin/unexpand", "/system/xbin/uniq",
			"/system/xbin/unix2dos", "/system/xbin/unlzma", "/system/xbin/unlzop",
			"/system/xbin/unxz", "/system/xbin/unzip", "/system/xbin/uptime",
			"/system/xbin/usleep", "/system/xbin/uudecode", "/system/xbin/uuencode",
			"/system/xbin/vi", "/system/xbin/watch", "/system/xbin/wc",
			"/system/xbin/wget", "/system/xbin/which", "/system/xbin/whoami",
			"/system/xbin/xargs", "/system/xbin/xz", "/system/xbin/xzcat",
			"/system/xbin/yes",
			"/system/xbin/zcat");
	symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
	symlink("mksh", "/system/bin/sh");
	symlink("mount.exfat", "/system/bin/fsck.exfat",
			"/system/bin/mkfs.exfat");
	symlink("toolbox", "/system/bin/cat", "/system/bin/chcon",
			"/system/bin/chmod", "/system/bin/chown", "/system/bin/clear",
			"/system/bin/cmp", "/system/bin/cp", "/system/bin/date",
			"/system/bin/dd", "/system/bin/df", "/system/bin/dmesg",
			"/system/bin/du", "/system/bin/getenforce", "/system/bin/getevent",
			"/system/bin/getprop", "/system/bin/getsebool", "/system/bin/grep",
			"/system/bin/hd", "/system/bin/id", "/system/bin/ifconfig",
			"/system/bin/iftop", "/system/bin/insmod", "/system/bin/ioctl",
			"/system/bin/ionice", "/system/bin/kill", "/system/bin/ln",
			"/system/bin/load_policy", "/system/bin/log", "/system/bin/ls",
			"/system/bin/lsmod", "/system/bin/lsof", "/system/bin/md5",
			"/system/bin/mkdir", "/system/bin/mkswap", "/system/bin/mount",
			"/system/bin/mv", "/system/bin/nandread", "/system/bin/netstat",
			"/system/bin/newfs_msdos", "/system/bin/notify", "/system/bin/printenv",
			"/system/bin/ps", "/system/bin/r", "/system/bin/readlink",
			"/system/bin/renice", "/system/bin/restorecon", "/system/bin/rm",
			"/system/bin/rmdir", "/system/bin/rmmod", "/system/bin/route",
			"/system/bin/runcon", "/system/bin/schedtop", "/system/bin/sendevent",
			"/system/bin/setconsole", "/system/bin/setenforce",
			"/system/bin/setprop", "/system/bin/setsebool", "/system/bin/sleep",
			"/system/bin/smd", "/system/bin/start", "/system/bin/stop",
			"/system/bin/swapoff", "/system/bin/swapon", "/system/bin/sync",
			"/system/bin/top", "/system/bin/touch", "/system/bin/umount",
			"/system/bin/uptime", "/system/bin/vmstat", "/system/bin/watchprops",
			"/system/bin/wipe");
			
	set_progress(0.52);
			
	ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing MrturDroid Init Scripts");
	
	### IMPORTANT ###
	package_extract_dir("_mrturdroid/auto", "/");
	if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
		ui_print("<#1082ac> mrtur ~</#> Flashing mrtur's Preset");
		package_extract_dir("_mrtur/auto", "/");
	endif;
	package_extract_file("_mrturdroid/exec/archidroid_backend.sh", "/tmp/archidroid_backend.sh");
	set_perm(0, 0, 0777, "/tmp/archidroid_backend.sh");
	run_program("/tmp/archidroid_backend.sh");
	delete("/tmp/archidroid_backend.sh");		
	### IMPORTANT ###

	set_progress(0.53);

	ui_print("<b><#1082ac> MrturDroid ~</#></b> Setting Permissions");
	set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/addon.d", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
	set_metadata("/system/bin/bdAddrLoader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hci_exec:s0");
	set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
	set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
	set_metadata("/system/xbin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
	set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
	set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
	set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
	set_metadata("/system/bin/efsks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:kickstart_exec:s0");
	set_metadata("/system/bin/hci_qcomm_init", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hci_exec:s0");
	set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
	set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
	set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
	set_metadata("/system/bin/ks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:kickstart_exec:s0");
	set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
	set_metadata("/system/bin/mksh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
	set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
	set_metadata("/system/bin/netcfg", "uid", 0, "gid", 3003, "mode", 02750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
	set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ping_exec:s0");
	set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
	set_metadata("/system/bin/qcks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:kickstart_exec:s0");
	set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
	set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
	set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0xc0, "selabel", "u:object_r:runas_exec:s0");
	set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
	set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
	set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
	set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
	set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
	set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
	set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
	set_metadata_recursive("/system/etc/init.d", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/etc/init.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
	set_metadata("/system/vendor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/vendor/etc", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/etc/audio_effects.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/firmware/keymaster", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/vendor/firmware/wlan", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/firmware/wlan/prima/WCNSS_cfg.dat", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/vendor/lib", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/xbin/librank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/xbin/procmem", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/xbin/procrank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
	set_metadata("/system/xbin/su", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:su_exec:s0");
	# MrturDroid
	set_perm_recursive(0, 0, 0755, 0755, "/system/archidroid/scripts");

	set_progress(0.54);

	#################
	### BAREBONES ###
	#################
	
	if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "barebones" then
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing Stock Kernel");
		package_extract_file("boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Stock Keyboard");
		package_extract_dir("_mrturdroid/apps/latinime", "/");		
	else
	
		#################
		### SUPERUSER ###
		#################
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","root") != "0" then		
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Root Activate");
		else
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Root Disable");
		endif;			
		
		package_extract_file("_mrturdroid/exec/superuser.sh", "/tmp/superuser.sh");
		set_perm(0, 0, 0777, "/tmp/superuser.sh");
		run_program("/tmp/superuser.sh", file_getprop("/tmp/aroma-data/mrturdroid.prop","root"));
		delete("tmp/superuser.sh");
			
		if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then		
			ui_print("<#1082ac> mrtur ~</#> Root acces -> Apps and ADB");
			package_extract_dir("_mrtur/apps/superuser", "/");
		endif;

		###############
		### RUNTIME ###
		###############
				
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying ", file_getprop("/tmp/aroma-data/mrturdroid.prop","runtime"), " Runtime");
		package_extract_file("_mrturdroid/exec/runtime.sh", "/tmp/runtime.sh");
		set_perm(0, 0, 0777, "/tmp/runtime.sh");
		run_program("/tmp/runtime.sh", file_getprop("/tmp/aroma-data/mrturdroid.prop","runtime"));
		delete("tmp/runtime.sh");
		
		##############
		### NO MTP ###
		##############
		
		if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
			ui_print("<#1082ac> mrtur ~</#> Including mrtur's no MTP");
			package_extract_file("_mrtur/exec/no_mtp.sh", "/tmp/no_mtp.sh");
			set_perm(0, 0, 0777, "/tmp/no_mtp.sh");
			run_program("/tmp/no_mtp.sh");
			delete("tmp/no_mtp.sh");
		endif;
		
		##############
		### KERNEL ###
		##############

		# We need to make sure that current kernel is based to prevent random zygote kernel panics
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Cleaning Old Kernel");
		package_extract_file("boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");

		### STOCK ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","kernel") == "stock" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing Stock Kernel");
			
			# Not needed since zygote kernel panic fix
			#package_extract_file("boot.img", "/tmp/stock.img");
			#write_raw_image("/tmp/stock.img", "/dev/block/mmcblk0p5");
			#delete("/tmp/stock.img");
		endif;

		### SEMAPHORE ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","kernel") == "semaphore" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing Semaphore Kernel");
			set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");
			package_extract_dir("_mrturdroid/kernels/semaphore", "/tmp");
			set_perm(0, 0, 0777, "/tmp/mkbootimg.sh");
			set_perm(0, 0, 0777, "/tmp/mkbootimg");
			set_perm(0, 0, 0777, "/tmp/unpackbootimg");
			set_perm(0, 0, 0777, "/tmp/busybox");
			set_perm(0, 0, 0777, "/tmp/install_kernel");
			run_program("/tmp/install_kernel");
		endif;
		
		### HELLS-CORE ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","kernel") == "hells" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Flashing Hells-Core Kernel");
			package_extract_dir("_mrturdroid/kernels/hells/system", "/system");			
			set_perm_recursive(0, 2000, 0755, 0755, "/system/etc/init.d");
			set_perm(0, 0, 0755, "/system/etc/init.d");
			package_extract_dir("_mrturdroid/kernels/hells/kernel", "/tmp");
			set_perm(0, 0, 0777, "/tmp/mkbootimg.sh");
			set_perm(0, 0, 0777, "/tmp/edit_ramdisk.sh");
			set_perm(0, 0, 0777, "/tmp/compatibility.sh");
			set_perm(0, 0, 0777, "/tmp/mkbootimg");
			set_perm(0, 0, 0777, "/tmp/unpackbootimg");
			set_perm(0, 0, 0777, "/tmp/busybox");
			run_program("/tmp/compatibility.sh");
			run_program("/tmp/busybox", "dd", "if=/dev/block/mmcblk0p6", "of=/tmp/boot.img");
			run_program("/tmp/unpackbootimg", "-i", "/tmp/boot.img", "-o", "/tmp/");
			run_program("/tmp/edit_ramdisk.sh");
			run_program("/tmp/mkbootimg.sh");
			run_program("/tmp/busybox", "dd", "if=/tmp/newboot.img", "of=/dev/block/mmcblk0p6");
			delete("/system/lib/hw/power.msm8960.so");
		endif;		

		set_progress(0.6);

		###############
		### RESTORE ###
		###############

		if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "no" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Restoring Addons");
			package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
			package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
			set_perm(0, 0, 0777, "/tmp/backuptool.sh");
			set_perm(0, 0, 0644, "/tmp/backuptool.functions");
			run_program("/tmp/backuptool.sh", "restore");
			delete("/system/bin/backuptool.sh");
			delete("/system/bin/backuptool.functions");;
		endif;

		set_progress(0.63);

		###########
		### DPI ###
		###########

		ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying ", file_getprop("/tmp/aroma-data/mrturdroid.prop","dpi"), " DPI");
		package_extract_file("_mrturdroid/exec/dpi.sh", "/tmp/dpi.sh");
		set_perm(0, 0, 0777, "/tmp/dpi.sh");
		run_program("/tmp/dpi.sh", file_getprop("/tmp/aroma-data/mrturdroid.prop","dpi"));
		delete("tmp/dpi.sh");

		set_progress(0.64);
		
		##################
		### GAPPS CORE ###
		##################

			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Apps");
			delete("/system/app/Provision.apk");
			package_extract_dir("_mrturdroid/gapps/system", "/system");
			set_perm_recursive(0, 0, 0755, 0644, "/system/app");
			set_perm_recursive(0, 0, 0755, 0644, "/system/priv-app");

		if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
			ui_print("<#1082ac> mrtur ~</#> Installing market for mrtur's preset");
			package_extract_dir("_mrtur/apps/market", "/");
		endif;

		set_progress(0.65);
		
		#############
		### GAPPS ###
		#############

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gcamera") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Camera");
			delete("/system/app/Camera2.apk");			
			package_extract_dir("_mrturdroid/apps/google/camera", "/");
		endif;
		
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gcalendar") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Calendar");
			package_extract_dir("_mrturdroid/apps/google/calendar", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gchrome") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Chrome");
			package_extract_dir("_mrturdroid/apps/google/chrome", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gkeep") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Keep");
			package_extract_dir("_mrturdroid/apps/google/keep", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gmail") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Mail");
			package_extract_dir("_mrturdroid/apps/google/mail", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gmaps") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Maps");
			package_extract_dir("_mrturdroid/apps/google/maps", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gvoice") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Voice");
			package_extract_dir("_mrturdroid/apps/google/voice", "/");
			delete("/system/app/VoiceSearchStub.apk");
			delete("/system/app/GoogleSearchWidget.apk");
			delete("/system/app/QuickSearchBox.apk");
			#delete("/system/priv-app/QuickSearchBox.apk");
			delete("/system/priv-app/Velvet.apk");		
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","ghangouts") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Hangouts");
			package_extract_dir("_mrturdroid/apps/google/hangouts", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gplus") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Plus");
			package_extract_dir("_mrturdroid/apps/google/plus", "/");
		endif;
		
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gplaymusic") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Play Music");
			delete("/system/app/Apollo.apk");		
			package_extract_dir("_mrturdroid/apps/google/playmusic", "/");
		endif;	

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","gtranslate") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Translate");
			package_extract_dir("_mrturdroid/apps/google/translate", "/");
		endif;

		set_progress(0.69);

		##############
		### XPOSED ###
		##############

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","libdvm.so") == "1" then

			if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","xposed") == "1" then
				ui_print("<b><#1082ac> MrturDroid ~</#></b> Including Xposed Framework");
				run_program("/sbin/busybox","mv","-f","/system/bin/app_process","/system/bin/app_process.orig");
				package_extract_dir("_mrturdroid/apps/xposed/xposed", "/");
				set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
			endif;
			if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","appsettings") == "1" then
				ui_print("<b><#1082ac> MrturDroid ~</#></b> Including App Settings Xposed Module");
				package_extract_dir("_mrturdroid/apps/xposed/appsettings", "/");
			endif;
			if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","bootmanager") == "1" then
				ui_print("<b><#1082ac> MrturDroid ~</#></b> Including BootManager Xposed Module");
				package_extract_dir("_mrturdroid/apps/xposed/bootmanager", "/");
			endif;	
			if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","actionplus") == "1" then
				ui_print("<b><#1082ac> MrturDroid ~</#></b> Including Complete Action Plus Xposed Module");
				package_extract_dir("_mrturdroid/apps/xposed/actionplus", "/");
			endif;			
			if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","xprivacy") == "1" then
				ui_print("<b><#1082ac> MrturDroid ~</#></b> Including XPrivacy Xposed Module");
				package_extract_dir("_mrturdroid/apps/xposed/xprivacy", "/");
			endif;
			
		endif;

		set_progress(0.71);

		###########
		### OTA ###
		###########

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","mdu") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing MrturDroid Update");
			package_extract_dir("_mrturdroid/mdu/app", "/");
		endif;

		set_progress(0.73);
		################
		### KEYBOARD ###
		################
		
		### GOOGLE ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","googlekb") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Keyboard");
			package_extract_dir("_mrturdroid/apps/google/keyboard", "/");
		endif;

		### TOUCHPAL ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","touchpal") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing TouchPal Keyboard");
			package_extract_dir("_mrturdroid/apps/touchpal", "/");
		endif;

		### HACKERS ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","hackers") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Hacker's Keyboard");
			package_extract_dir("_mrturdroid/apps/hackers", "/");
		endif;
		
		### STOCK ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","stock") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Stock Keyboard");
			package_extract_dir("_mrturdroid/apps/latinime", "/");			
		endif;		

		set_progress(0.74);

		################
		### LAUNCHER ###
		################

		### NOVA ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","launcher") == "nova" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Nova Launcher");
			delete("/system/priv-app/Launcher3.apk");
			delete("/system/app/Launcher3.apk");		
			package_extract_dir("_mrturdroid/apps/nova", "/");
		endif;

		### GOOGLE ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","launcher") == "google" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Google Launcher");
			delete("/system/priv-app/Launcher3.apk");
			delete("/system/app/Launcher3.apk");		
			package_extract_dir("_mrturdroid/apps/google/launcher", "/");
		endif;

		### NONE ###
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","launcher") == "none" then
			# Just delete Launcher then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Skipping Launcher");
			delete("/system/priv-app/Launcher3.apk");
			delete("/system/app/Launcher3.apk");
		endif;

		set_progress(0.75);

		#####################
		### BOOTANIMATION ###
		#####################

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "mrtur" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying MrturDroid Bootanimation");
			package_extract_dir("_mrturdroid/bootanimations/mrtur", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "stock" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying Slim Bootanimation");
			# Not needed, haha!
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "nexus" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying Nexus Bootanimation");
			package_extract_dir("_mrturdroid/bootanimations/nexus", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "google" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying Google Bootanimation");
			package_extract_dir("_mrturdroid/bootanimations/google", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "none" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Disabling Bootanimation");
			package_extract_file("_mrturdroid/bootanimations/none/disablebootanim.sh", "/tmp/disablebootanim.sh");
			set_perm(0, 0, 0777, "/tmp/disablebootanim.sh");
			run_program("/tmp/disablebootanim.sh");
			delete("/tmp/disablebootanim.sh");
			delete("/system/media/bootanimation.zip");
		endif;

		set_progress(0.76);

		##############
		### TWEAKS ###
		##############

		### MrturDroid Tweaks ###
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying MrturDroid Tweaks");

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","buildtweaks") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Applying build.prop Tweaks");
			package_extract_file("_mrturdroid/tweaks/build.prop/tweaks.sh", "/tmp/tweaks.sh");
			set_perm(0, 0, 0777, "/tmp/tweaks.sh");
			run_program("/tmp/tweaks.sh");
			delete ("/tmp/tweaks.sh");

				
			if file_getprop("/tmp/aroma-data/mrturdroidbuild.prop","fastdormancy") == "0" then
				ui_print("<b><#1082ac> MrturDroid ~</#></b> Disabling Fast Dormancy");
				package_extract_file("_mrturdroid/tweaks/build.prop/fdOFF.sh", "/tmp/fdOFF.sh");
				set_perm(0, 0, 0777, "/tmp/fdOFF.sh");
				run_program("/tmp/fdOFF.sh");
				delete ("/tmp/fdOFF.sh");
			endif;

			if file_getprop("/tmp/aroma-data/mrturdroidbuild.prop","zerowakeup") == "1" then
				ui_print("<b><#1082ac> MrturDroid ~</#></b> Enabling ZeroWakeUp");
				package_extract_file("_mrturdroid/tweaks/build.prop/zerowakeupON.sh", "/tmp/zerowakeupON.sh");
				set_perm(0, 0, 0777, "/tmp/zerowakeupON.sh");
				run_program("/tmp/zerowakeupON.sh");
				delete("/tmp/zerowakeupON.sh");
			endif;
			
		endif;
		
		set_progress(0.77);
			
		############
		### APPS ###
		############
		
		if file_getprop("/tmp/aroma-data/mrturdroid.prop","trickster") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Trickster MOD");
			package_extract_dir("_mrturdroid/apps/trickster", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","viper4") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing ViPER4Android Audio Effects");
			delete("/system/app/DSPManager.apk");		
			package_extract_dir("_mrturdroid/apps/viper4", "/");
		endif;	

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","titaniumbackup") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Titanium Backup");
			package_extract_dir("_mrturdroid/apps/titaniumbackup", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","greenify") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Greenify");
			package_extract_dir("_mrturdroid/apps/greenify", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","lmt") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing LMT");
			package_extract_dir("_mrturdroid/apps/lmt", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","mxplayer") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing MXPlayer");
			package_extract_dir("_mrturdroid/apps/mxplayer", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","bbs") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing BetterBatteryStats");
			package_extract_dir("_mrturdroid/apps/betterbatterystats", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","cooltool") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing CoolTool");
			package_extract_dir("_mrturdroid/apps/cooltool", "/");
		endif;
		if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
			ui_print("<#1082ac> mrtur ~</#> Installing CoolTool for mrtur's preset");
			package_extract_dir("_mrtur/apps/cooltool", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","rootbrowser") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Root Browser");
			package_extract_dir("_mrturdroid/apps/rootbrowser", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","totalcommander") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Total Commander");
			package_extract_dir("_mrturdroid/apps/totalcommander", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","youtube") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing YouTube");
			package_extract_dir("_mrturdroid/apps/youtube", "/");
		endif;

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","facebook") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Facebook");
			package_extract_dir("_mrturdroid/apps/facebook", "/");
		endif;
		
		set_progress(0.81);

		###########################
		### QUALCOMM ADRENO GPU ###
		###########################

		if file_getprop("/tmp/aroma-data/mrturdroidbuild.prop","adreno") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Installing Qualcomm Adreno GPU");
			package_extract_dir("_mrturdroid/tweaks/adreno", "/");
		endif;
		
		set_progress(0.92);

		##################
		### DEBIAN OFF ###
		##################

		if file_getprop("/tmp/aroma-data/mrturdroid.prop","debianoff") == "1" then
			ui_print("<b><#1082ac> MrturDroid ~</#></b> Delete Debian");
			delete_recursive("/data/media/0/MrturDroid/debian");
			delete_recursive("/data/media/0/MrturDroid/tmp");
			delete_recursive("/data/media/0/MrturDroid/GitHub");
			delete_recursive("/data/media/0/MrturDroid/System");	
			delete("/system/bin/adflash","/system/bin/adgithub","/system/bin/adlinux","/system/bin/debian","/system/bin/openssl","/system/bin/curl","/system/archidroid/system/debian.tar.gz");
		endif;
		
		set_progress(0.93);

		# One more fix to logcat
		ui_print("<b><#1082ac> MrturDroid ~</#></b> Syncing System");
		#set_perm(1000, 1000, 0771, "/data");
		#set_perm_recursive(1000, 1000, 0771, 0644, "/data/app");
		#set_perm_recursive(0, 0, 0771, 0660, "/data/data");
		run_program("/sbin/sync");
		
		set_progress(0.97);
	endif;
	set_progress(0.98);

	### LOCK ###
	run_program("/tmp/adlock.sh", "lock", "/system/etc/hosts");
endif;

set_progress(0.99);

ui_print("<b><#1082ac> MrturDroid ~</#></b> Unmounting partitions");

ui_print("###############################");
ui_print("#  _____ _       _     _      #");
ui_print("# |  ___(_)_ __ (_)___| |__   #");
ui_print("# | |_  | | '_ \| / __| '_ \  #");
ui_print("# |  _| | | | | | \__ \ | | | #");
ui_print("# |_|   |_|_| |_|_|___/_| |_| #");
ui_print("#                             #");
ui_print("###############################");
#run_program("cp", "/tmp/recovery.log", "/sdcard/MrturDroid.log");
set_progress(1.0);
