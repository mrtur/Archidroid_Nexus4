ui_print("#########################################################");
ui_print("#  __  __      _              ____            _     _   #");
ui_print("# |  \/  |_ __| |_ _   _ _ __|  _ \ _ __ ___ (_) __| |  #");
ui_print("# | |\/| | '__| __| | | | '__| | | | '__/ _ \| |/ _` |  #");
ui_print("# | |  | | |  | |_| |_| | |  | |_| | | | (_) | | (_| |  #");
ui_print("# |_|  |_|_|   \__|\__,_|_|  |____/|_|  \___/|_|\__,_|  #");
ui_print("#                                                       #");
ui_print("#########################################################");
sleep (1);
assert(getprop("ro.product.device") == "mako" || getprop("ro.build.product") == "mako");
ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Ready!");
set_progress(0.01);
sleep (2);
ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Unmounting Partitions");
assert(unmount("/system") || ui_print("(system is unmounted already)"));
#assert(unmount("/data") || ui_print("(data is unmounted already)"));
#assert(unmount("/cache") || ui_print("(cache is unmounted already)"));
#assert(unmount("/preload") || ui_print("(preload is unmounted already)"));

set_progress(0.02);

if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "no" then
	mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system");
	package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
	package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
	set_perm(0, 0, 0777, "/tmp/backuptool.sh");
	set_perm(0, 0, 0644, "/tmp/backuptool.functions");
	run_program("/tmp/backuptool.sh", "backup");
	unmount("/system");
endif;

set_progress(0.03);

ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Formatting Partitions");
#format("ext4", "EMMC", "/dev/block/mmcblk0p8", "0");
format("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "0", "/system");
#format("ext4", "EMMC", "/dev/block/mmcblk0p10", "0");

set_progress(0.05);

#ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Checking Partitions For Errors");
#run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p8");
#run_program("/sbin/e2fsck", "-p", "/dev/block/platform/msm_sdcc.1/by-name/system");
#run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p10");
#run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p12");

set_progress(0.06);

ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Mounting Partitions");
assert(mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system") || ui_print("(system is mounted already)"));
#assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p12", "/data") || ui_print("(data is mounted already)"));

set_progress(0.07);
#package_extract_file("_mrturdroid/scripts/bash", "/tmp/bash");
#set_perm(0, 0, 0777, "/tmp/bash");

if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "yes" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Formatting /data excluding /data/media");
	package_extract_file("_mrturdroid/scripts/wipe.sh", "/tmp/wipe.sh");
	set_perm(0, 0, 0777, "/tmp/wipe.sh");
	run_program("/tmp/wipe.sh");
endif;

set_progress(0.08);

if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "no" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Cleaning cache, dalvik cache and resource cache");
	delete_recursive("/data/dalvik-cache");
	delete_recursive("/dalvik/dalvik-cache");
	delete_recursive("/data/resource-cache");
endif;

ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Executing Archi's Scripts");
package_extract_file("_mrturdroid/scripts/mrturdroid.sh", "/tmp/mrturdroid.sh");
set_perm(0, 0, 0777, "/tmp/mrturdroid.sh");
run_program("/tmp/mrturdroid.sh");

if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "yes" then
  ui_print("<b><#e0e0e0>RunOnce</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>$</#></b> Install Mode Detected");
  package_extract_file("_mrturdroid/scripts/mrturdroid_install.sh", "/tmp/mrturdroid_install.sh");
  set_perm(0, 0, 0777, "/tmp/mrturdroid_install.sh");
	run_program("/tmp/mrturdroid_install.sh");
else
	if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","force") == "no" then
		ui_print("<b><#e0e0e0>RunOnce</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>$</#></b> Update Mode Detected");
		package_extract_file("_mrturdroid/scripts/mrturdroid_update.sh", "/tmp/mrturdroid_update.sh");
		set_perm(0, 0, 0777, "/tmp/mrturdroid_update.sh");
		run_program("/tmp/mrturdroid_update.sh");
	else
		ui_print("<b><#e0e0e0>RunOnce</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>$</#></b> Forced Update Mode Detected");
		package_extract_file("_mrturdroid/scripts/mrturdroid_update.sh", "/tmp/mrturdroid_update.sh");
		set_perm(0, 0, 0777, "/tmp/mrturdroid_update.sh");
		run_program("/tmp/mrturdroid_update.sh", "force");
	endif;
endif;

set_progress(0.09);

set_progress(0.1);

ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing MrturDroid Core");
show_progress(0.4, 1212);
package_extract_dir("system", "/system");
if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> mrtur </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing mrtur's Core");
	delete_recursive("/system/media/video");
	delete_recursive("/system/media/audio/alarms");
	#delete_recursive("/system/media/audio/ui");
	delete_recursive("/system/media/audio/ringtones");
	delete_recursive("/system/media/audio/notifications");
 	package_extract_dir("_mrtur/system", "/system");
endif;
run_program("/sbin/sync");

set_progress(0.51);

ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Creating symlinks");

symlink("../xbin/su", "/system/bin/su");
symlink("/data/misc/audio/mbhc.bin", "/system/etc/firmware/wcd9310/wcd9310_mbhc.bin");
symlink("/data/misc/audio/wcd9310_anc.bin", "/system/etc/firmware/wcd9310/wcd9310_anc.bin");
symlink("/data/misc/wifi/WCNSS_qcom_cfg.ini", "/system/vendor/firmware/wlan/prima/WCNSS_qcom_cfg.ini");
symlink("/data/misc/wifi/WCNSS_qcom_wlan_nv.bin", "/system/vendor/firmware/wlan/prima/WCNSS_qcom_wlan_nv.bin");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("busybox", "/system/xbin/[", "/system/xbin/[[",
        "/system/xbin/adjtimex", "/system/xbin/arp", "/system/xbin/ash",
        "/system/xbin/awk", "/system/xbin/base64", "/system/xbin/basename",
        "/system/xbin/bbconfig", "/system/xbin/blkid", "/system/xbin/blockdev",
        "/system/xbin/brctl", "/system/xbin/bunzip2", "/system/xbin/bzcat",
        "/system/xbin/bzip2", "/system/xbin/cal", "/system/xbin/cat",
        "/system/xbin/catv", "/system/xbin/chattr", "/system/xbin/chgrp",
        "/system/xbin/chmod", "/system/xbin/chown", "/system/xbin/chroot",
        "/system/xbin/clear", "/system/xbin/cmp", "/system/xbin/comm",
        "/system/xbin/cp", "/system/xbin/cpio", "/system/xbin/crond",
        "/system/xbin/crontab", "/system/xbin/cut", "/system/xbin/date",
        "/system/xbin/dc", "/system/xbin/dd", "/system/xbin/depmod",
        "/system/xbin/devmem", "/system/xbin/df", "/system/xbin/diff",
        "/system/xbin/dirname", "/system/xbin/dmesg", "/system/xbin/dnsd",
        "/system/xbin/dos2unix", "/system/xbin/du", "/system/xbin/echo",
        "/system/xbin/ed", "/system/xbin/egrep", "/system/xbin/env",
        "/system/xbin/expand", "/system/xbin/expr", "/system/xbin/false",
        "/system/xbin/fbsplash", "/system/xbin/fdisk", "/system/xbin/fgrep",
        "/system/xbin/find", "/system/xbin/flash_lock",
        "/system/xbin/flash_unlock", "/system/xbin/flashcp",
        "/system/xbin/flock", "/system/xbin/fold", "/system/xbin/free",
        "/system/xbin/freeramdisk", "/system/xbin/fstrim", "/system/xbin/fsync",
        "/system/xbin/ftpget", "/system/xbin/ftpput", "/system/xbin/fuser",
        "/system/xbin/getopt", "/system/xbin/grep", "/system/xbin/groups",
        "/system/xbin/gunzip", "/system/xbin/gzip", "/system/xbin/halt",
        "/system/xbin/head", "/system/xbin/hexdump", "/system/xbin/id",
        "/system/xbin/ifconfig", "/system/xbin/inetd", "/system/xbin/insmod",
        "/system/xbin/install", "/system/xbin/ionice", "/system/xbin/iostat",
        "/system/xbin/ip", "/system/xbin/kill", "/system/xbin/killall",
        "/system/xbin/killall5", "/system/xbin/less", "/system/xbin/ln",
        "/system/xbin/losetup", "/system/xbin/ls", "/system/xbin/lsattr",
        "/system/xbin/lsmod", "/system/xbin/lsusb", "/system/xbin/lzcat",
        "/system/xbin/lzma", "/system/xbin/lzop", "/system/xbin/lzopcat",
        "/system/xbin/man", "/system/xbin/md5sum", "/system/xbin/mesg",
        "/system/xbin/mkdir", "/system/xbin/mke2fs", "/system/xbin/mkfifo",
        "/system/xbin/mkfs.ext2", "/system/xbin/mkfs.vfat",
        "/system/xbin/mknod", "/system/xbin/mkswap", "/system/xbin/mktemp",
        "/system/xbin/modinfo", "/system/xbin/modprobe", "/system/xbin/more",
        "/system/xbin/mount", "/system/xbin/mountpoint", "/system/xbin/mpstat",
        "/system/xbin/mv", "/system/xbin/nanddump", "/system/xbin/nandwrite",
        "/system/xbin/nbd-client", "/system/xbin/netstat", "/system/xbin/nice",
        "/system/xbin/nohup", "/system/xbin/nslookup", "/system/xbin/ntpd",
        "/system/xbin/od", "/system/xbin/patch", "/system/xbin/pgrep",
        "/system/xbin/pidof", "/system/xbin/ping", "/system/xbin/pipe_progress",
        "/system/xbin/pkill", "/system/xbin/pmap", "/system/xbin/poweroff",
        "/system/xbin/printenv", "/system/xbin/printf", "/system/xbin/ps",
        "/system/xbin/pstree", "/system/xbin/pwd", "/system/xbin/pwdx",
        "/system/xbin/rdev", "/system/xbin/readlink", "/system/xbin/realpath",
        "/system/xbin/renice", "/system/xbin/reset", "/system/xbin/resize",
        "/system/xbin/rev", "/system/xbin/rm", "/system/xbin/rmdir",
        "/system/xbin/rmmod", "/system/xbin/route", "/system/xbin/run-parts",
        "/system/xbin/rx", "/system/xbin/sed", "/system/xbin/seq",
        "/system/xbin/setconsole", "/system/xbin/setserial",
        "/system/xbin/setsid", "/system/xbin/sh", "/system/xbin/sha1sum",
        "/system/xbin/sha256sum", "/system/xbin/sha3sum",
        "/system/xbin/sha512sum", "/system/xbin/sleep", "/system/xbin/sort",
        "/system/xbin/split", "/system/xbin/stat", "/system/xbin/strings",
        "/system/xbin/stty", "/system/xbin/sum", "/system/xbin/swapoff",
        "/system/xbin/swapon", "/system/xbin/sync", "/system/xbin/sysctl",
        "/system/xbin/tac", "/system/xbin/tail", "/system/xbin/tar",
        "/system/xbin/taskset", "/system/xbin/tee", "/system/xbin/telnet",
        "/system/xbin/telnetd", "/system/xbin/test", "/system/xbin/tftp",
        "/system/xbin/tftpd", "/system/xbin/time", "/system/xbin/timeout",
        "/system/xbin/top", "/system/xbin/touch", "/system/xbin/tr",
        "/system/xbin/traceroute", "/system/xbin/true", "/system/xbin/ttysize",
        "/system/xbin/tune2fs", "/system/xbin/umount", "/system/xbin/uname",
        "/system/xbin/uncompress", "/system/xbin/unexpand", "/system/xbin/uniq",
        "/system/xbin/unix2dos", "/system/xbin/unlzma", "/system/xbin/unlzop",
        "/system/xbin/unxz", "/system/xbin/unzip", "/system/xbin/uptime",
        "/system/xbin/usleep", "/system/xbin/uudecode", "/system/xbin/uuencode",
        "/system/xbin/vi", "/system/xbin/watch", "/system/xbin/wc",
        "/system/xbin/wget", "/system/xbin/which", "/system/xbin/whoami",
        "/system/xbin/xargs", "/system/xbin/xz", "/system/xbin/xzcat",
        "/system/xbin/yes",
        "/system/xbin/zcat");
symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
symlink("logcat", "/system/bin/lolcat");
symlink("mksh", "/system/bin/sh");
symlink("mount.exfat", "/system/bin/fsck.exfat",
        "/system/bin/mkfs.exfat");
symlink("pigz", "/system/xbin/unpigz");
symlink("toolbox", "/system/bin/cat", "/system/bin/chcon",
        "/system/bin/chmod", "/system/bin/chown", "/system/bin/clear",
        "/system/bin/cmp", "/system/bin/cp", "/system/bin/date",
        "/system/bin/dd", "/system/bin/df", "/system/bin/dmesg",
        "/system/bin/du", "/system/bin/getenforce", "/system/bin/getevent",
        "/system/bin/getprop", "/system/bin/getsebool", "/system/bin/grep",
        "/system/bin/hd", "/system/bin/id", "/system/bin/ifconfig",
        "/system/bin/iftop", "/system/bin/insmod", "/system/bin/ioctl",
        "/system/bin/ionice", "/system/bin/kill", "/system/bin/ln",
        "/system/bin/load_policy", "/system/bin/log", "/system/bin/ls",
        "/system/bin/lsmod", "/system/bin/lsof", "/system/bin/md5",
        "/system/bin/mkdir", "/system/bin/mkswap", "/system/bin/mount",
        "/system/bin/mv", "/system/bin/nandread", "/system/bin/netstat",
        "/system/bin/newfs_msdos", "/system/bin/notify", "/system/bin/printenv",
        "/system/bin/ps", "/system/bin/r", "/system/bin/readlink",
        "/system/bin/renice", "/system/bin/restorecon", "/system/bin/rm",
        "/system/bin/rmdir", "/system/bin/rmmod", "/system/bin/route",
        "/system/bin/runcon", "/system/bin/schedtop", "/system/bin/sendevent",
        "/system/bin/setconsole", "/system/bin/setenforce",
        "/system/bin/setprop", "/system/bin/setsebool", "/system/bin/sleep",
        "/system/bin/smd", "/system/bin/start", "/system/bin/stop",
        "/system/bin/swapoff", "/system/bin/swapon", "/system/bin/sync",
        "/system/bin/top", "/system/bin/touch", "/system/bin/umount",
        "/system/bin/uptime", "/system/bin/vmstat", "/system/bin/watchprops",
        "/system/bin/wipe");
		
set_progress(0.52);
		
ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing MrturDroid Init Scripts");
### IMPORTANT ###
package_extract_dir("_mrturdroid/auto", "/");
if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> mrtur </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing mrtur's Preset");
 	package_extract_dir("_mrtur/auto", "/");
endif;
### IMPORTANT ###

set_progress(0.53);

ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Setting Permissions");
set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/addon.d", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/bdAddrLoader", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hci_exec:s0");
set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
set_metadata("/system/bin/efsks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:kickstart_exec:s0");
set_metadata("/system/bin/hci_qcomm_init", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hci_exec:s0");
set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
set_metadata("/system/bin/ks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:kickstart_exec:s0");
set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
set_metadata("/system/bin/mksh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
set_metadata("/system/bin/netcfg", "uid", 0, "gid", 3003, "mode", 02750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ping_exec:s0");
set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
set_metadata("/system/bin/qcks", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:kickstart_exec:s0");
set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0xc0, "selabel", "u:object_r:runas_exec:s0");
set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
set_metadata_recursive("/system/etc/init.d", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
set_metadata("/system/vendor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/etc", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/audio_effects.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/keymaster", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/firmware/wlan", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/wlan/prima/WCNSS_cfg.dat", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/librank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/procmem", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/procrank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/su", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:su_exec:s0");

set_progress(0.54);

#################
### BAREBONES ###
#################
if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "barebones" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing Stock Kernel");
    package_extract_file("boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying 320 DPI");
    package_extract_file("_mrturdroid/dpi/320dpi.sh", "/tmp/320dpi.sh");
    set_perm(0, 0, 0777, "/tmp/320dpi.sh");
    run_program("/tmp/320dpi.sh");
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Stock Keyboard");
else
	##############
	### KERNEL ###
	##############

	# We need to make sure that current kernel is based to prevent random zygote kernel panics
	#ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Cleaning Old Kernel");
	package_extract_file("boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");

	### STOCK ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","kernel") == "stock" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing Stock Kernel");
		#package_extract_file("boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");	
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Trickster");
		package_extract_dir("_mrturdroid/apps/trickster", "/"); 
		
		# Not needed since zygote kernel panic fix
		#package_extract_file("boot.img", "/tmp/stock.img");
		#write_raw_image("/tmp/stock.img", "/dev/block/mmcblk0p5");
		#delete("/tmp/stock.img");
	endif;

	### FRANCO ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","kernel") == "franco" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing Franco Kernel");
		package_extract_file("_mrturdroid/kernels/franco/boot.img", "/dev/block/platform/msm_sdcc.1/by-name/boot");
		package_extract_dir("_mrturdroid/kernels/franco/files", "/");
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Trickster");
		package_extract_dir("_mrturdroid/apps/trickster", "/"); 
		
		# Not needed since zygote kernel panic fix
		#package_extract_file("boot.img", "/tmp/stock.img");
		#write_raw_image("/tmp/stock.img", "/dev/block/mmcblk0p5");
		#delete("/tmp/stock.img");
	endif;

	### SEMAPHORE ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","kernel") == "semaphore" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Flashing Semaphore Kernel");
		set_perm_recursive(0, 0, 0755, 0755, "/system/etc/init.d");
		package_extract_dir("_mrturdroid/kernels/semaphore", "/tmp");
		package_extract_dir("kernel", "/tmp");
		set_perm(0, 0, 0777, "/tmp/mkbootimg.sh");
		set_perm(0, 0, 0777, "/tmp/mkbootimg");
		set_perm(0, 0, 0777, "/tmp/unpackbootimg");
		set_perm(0, 0, 0777, "/tmp/busybox");
		set_perm(0, 0, 0777, "/tmp/install_kernel");
		run_program("/tmp/install_kernel");
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Trickster");
		package_extract_dir("_mrturdroid/apps/trickster", "/"); 
		
		# Not needed since zygote kernel panic fix
		#package_extract_file("boot.img", "/tmp/stock.img");
		#write_raw_image("/tmp/stock.img", "/dev/block/mmcblk0p5");
		#delete("/tmp/stock.img");
	endif;

	set_progress(0.6);

	###############
	### RESTORE ###
	###############

	if file_getprop("/tmp/aroma-data/mrturdroidwipe.prop","wipe") == "no" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Restoring Addons");
		package_extract_file("system/bin/backuptool.sh", "/tmp/backuptool.sh");
		package_extract_file("system/bin/backuptool.functions", "/tmp/backuptool.functions");
		set_perm(0, 0, 0777, "/tmp/backuptool.sh");
		set_perm(0, 0, 0644, "/tmp/backuptool.functions");
		run_program("/tmp/backuptool.sh", "restore");
		delete("/system/bin/backuptool.sh");
		delete("/system/bin/backuptool.functions");;
	endif;

	set_progress(0.63);

	###########
	### DPI ###
	###########

	### 240 ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","dpi") == "240" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying 240 DPI");
		package_extract_file("_mrturdroid/dpi/240dpi.sh", "/tmp/240dpi.sh");
		set_perm(0, 0, 0777, "/tmp/240dpi.sh");
		run_program("/tmp/240dpi.sh");
	endif;

	### 268 ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","dpi") == "268" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying 268 DPI");
		package_extract_file("_mrturdroid/dpi/268dpi.sh", "/tmp/268dpi.sh");
		set_perm(0, 0, 0777, "/tmp/268dpi.sh");
		run_program("/tmp/268dpi.sh");
	endif;
		
	### 280 ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","dpi") == "280" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying 280 DPI");
		package_extract_file("_mrturdroid/dpi/280dpi.sh", "/tmp/280dpi.sh");
		set_perm(0, 0, 0777, "/tmp/280dpi.sh");
		run_program("/tmp/280dpi.sh");
	endif;

	### 320 ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","dpi") == "320" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying 320 DPI");
		package_extract_file("_mrturdroid/dpi/320dpi.sh", "/tmp/320dpi.sh");
		set_perm(0, 0, 0777, "/tmp/320dpi.sh");
		run_program("/tmp/320dpi.sh");
	endif;

	set_progress(0.64);

	##############
	### XPOSED ###
	##############

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","xposed") == "1" then

		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Including Xposed Framework");
		package_extract_dir("_mrturdroid/apps/xposed/xposed", "/");
		
		if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","appsettings") == "1" then
			ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Including App Settings Xposed Module");
			package_extract_dir("_mrturdroid/apps/xposed/appsettings", "/");
		endif;
		if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","bootmanager") == "1" then
			ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Including BootManager Xposed Module");
			package_extract_dir("_mrturdroid/apps/xposed/bootmanager", "/");
		endif;	
		if file_getprop("/tmp/aroma-data/mrturdroidxposed.prop","xprivacy") == "1" then
			ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Including XPrivacy Xposed Module");
			package_extract_dir("_mrturdroid/apps/xposed/xprivacy", "/");
		endif;
		
	endif;

	set_progress(0.71);

	################
	### KEYBOARD ###
	################

	### TOUCHPAL ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","keyboard") == "touchpal" then
	delete("/system/app/LatinIME.apk","/system/app/LatinImeDictionaryPack.apk");
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing TouchPal Keyboard");
	package_extract_dir("_mrturdroid/apps/touchpal", "/");
	endif;
	if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> mrtur </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing TouchPal for mrtur's preset");
		package_extract_dir("_mrtur/apps/touchpal", "/");
	endif;

	### HACKERS ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","keyboard") == "hackers" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Hacker's Keyboard");
	delete("/system/app/LatinIME.apk","/system/app/LatinImeDictionaryPack.apk");
	package_extract_dir("_mrturdroid/apps/hackers", "/");
	endif;

	### BOTH ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","keyboard") == "both" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing TouchPal + Hacker's Keyboard");
	delete("/system/app/LatinIME.apk","/system/app/LatinImeDictionaryPack.apk");
	package_extract_dir("_mrturdroid/apps/touchpal", "/");
	package_extract_dir("_mrturdroid/apps/hackers", "/");
	endif;

	### STOCK ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","keyboard") == "stock" then
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Stock Keyboard");
	# Not needed, haha!
	endif;

	### NONE ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","keyboard") == "none" then
		# Just delete LatinIME then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Skipping Keyboard");
		delete("/system/app/LatinIME.apk","/system/app/LatinImeDictionaryPack.apk");
	endif;

	set_progress(0.74);


	################
	### LAUNCHER ###
	################

	### NOVA ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","launcher") == "nova" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Nova Launcher");
		delete("/system/app/Trebuchet.apk");
		package_extract_dir("_mrturdroid/apps/nova", "/");
	endif;

	### STOCK ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","launcher") == "stock" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Stock Launcher");
		# Not needed, haha!
	endif;

	### NONE ###
	if file_getprop("/tmp/aroma-data/mrturdroid.prop","launcher") == "none" then
		# Just delete NovaLauncher then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Skipping Launcher");
		delete("/system/app/Trebuchet.apk");
	endif;

	set_progress(0.75);

	#####################
	### BOOTANIMATION ###
	#####################

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "mrtur" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying MrturDroid Bootanimation");
		package_extract_dir("_mrturdroid/bootanimations/mrtur", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "stock" then
	  ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying Slim Bootanimation");
	  # Not needed, haha!
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "nexus" then
	  ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying Nexus Bootanimation");
	  package_extract_dir("_mrturdroid/bootanimations/nexus", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "google" then
	  ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying Google Bootanimation");
	  package_extract_dir("_mrturdroid/bootanimations/google", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","bootanimation") == "none" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Disabling Bootanimation");
		package_extract_file("_mrturdroid/bootanimations/none/disablebootanim.sh", "/tmp/disablebootanim.sh");
		set_perm(0, 0, 0777, "/tmp/disablebootanim.sh");
		run_program("/tmp/disablebootanim.sh");
		delete ("/tmp/disablebootanim.sh");
		delete("/system/media/bootanimation.zip");
	endif;

	set_progress(0.76);

	##############
	### TWEAKS ###
	##############

	### MrturDroid Tweaks ###
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying MrturDroid Tweaks");

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","hdvoice") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying HD Voice Tweak");
		package_extract_dir("_mrturdroid/tweaks/hdvoice", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","buildtweaks") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Applying build.prop Tweaks");
		package_extract_file("_mrturdroid/tweaks/build.prop/tweaks.sh", "/tmp/tweaks.sh");
		set_perm(0, 0, 0777, "/tmp/tweaks.sh");
		run_program("/tmp/tweaks.sh");
		delete ("/tmp/tweaks.sh");
	endif;
			
	if file_getprop("/tmp/aroma-data/mrturdroidbuild.prop","fastdormancy") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Disabling Fast Dormancy");
		package_extract_file("_mrturdroid/tweaks/build.prop/fdOFF.sh", "/tmp/fdOFF.sh");
		set_perm(0, 0, 0777, "/tmp/fdOFF.sh");
		run_program("/tmp/fdOFF.sh");
		delete ("/tmp/fdOFF.sh");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroidbuild.prop","zerowakeup") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Enabling ZeroWakeUp");
		package_extract_file("_mrturdroid/tweaks/build.prop/zerowakeupON.sh", "/tmp/zerowakeupON.sh");
		set_perm(0, 0, 0777, "/tmp/zerowakeupON.sh");
		run_program("/tmp/zerowakeupON.sh");
		delete("/tmp/zerowakeupON.sh");
	endif;

	set_progress(0.77);

	#############
	### GAPPS ###
	#############

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gapps") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Apps");
		delete("/system/app/Provision.apk","/system/app/QuickSearchBox.apk","/system/app/SetupWizard.apk","/system/app/Velvet.apk","/system/app/Vending.apk","/system/app/BrowserProviderProxy.apk","/system/app/PartnerBookmarksProvider.apk","/system/app/Gmail2.apk");
		package_extract_dir("_mrturdroid/gapps/system", "/system");
		#set_perm(0, 0, 0755, "/system/addon.d/70-gapps.sh");
		#package_extract_dir("_mrturdroid/gapps/optional", "/tmp");
		#package_extract_file("_mrturdroid/gapps/install-optional.sh", "/tmp/install-optional.sh");
		#set_perm(0, 0, 0777, "/tmp/install-optional.sh");
		#run_program("/tmp/install-optional.sh", "");
		set_perm_recursive(0, 0, 0755, 0644, "/system/app");
	endif;
	if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> mrtur </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing market for mrtur's preset");
		package_extract_dir("_mrtur/apps/market", "/");
	endif;

	set_progress(0.85);

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gcalendar") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Calendar");
		package_extract_dir("_mrturdroid/apps/gcalendar", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gchrome") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Chrome");
		package_extract_dir("_mrturdroid/apps/gchrome", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gkeep") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Keep");
		package_extract_dir("_mrturdroid/apps/gkeep", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gmail") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Mail");
		package_extract_dir("_mrturdroid/apps/gmail", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gmaps") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Maps");
		package_extract_dir("_mrturdroid/apps/gmaps", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gvoice") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Voice");
		package_extract_dir("_mrturdroid/apps/gvoice", "/");
		delete("/system/app/VoiceSearchStub.apk");
		delete("/system/app/GoogleSearchWidget.apk");
		delete("/system/app/QuickSearchBox.apk");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","ghangouts") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Hangouts");
		package_extract_dir("_mrturdroid/apps/ghangouts", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gplus") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Plus");
		package_extract_dir("_mrturdroid/apps/gplus", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","gtranslate") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Google Translate");
		package_extract_dir("_mrturdroid/apps/gtranslate", "/");
	endif;

	set_progress(0.86);
		
		
	############
	### APPS ###
	############

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","titaniumbackup") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Titanium Backup");
		package_extract_dir("_mrturdroid/apps/titaniumbackup", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","greenify") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Greenify");
		package_extract_dir("_mrturdroid/apps/greenify", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","lmt") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing LMT");
		package_extract_dir("_mrturdroid/apps/lmt", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","mxplayer") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing MXPlayer");
		package_extract_dir("_mrturdroid/apps/mxplayer", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","bbs") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing BetterBatteryStats");
		package_extract_dir("_mrturdroid/apps/betterbatterystats", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","cooltool") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing CoolTool");
		package_extract_dir("_mrturdroid/apps/cooltool", "/");
	endif;
	if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> mrtur </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing CoolTool for mrtur's preset");
		package_extract_dir("_mrtur/apps/cooltool", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","rootbrowser") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Root Browser");
		package_extract_dir("_mrturdroid/apps/rootbrowser", "/");
	endif;
	#if file_getprop("/tmp/aroma-data/mrturdroidinstallmode.prop","preset") == "mrtur" then
	#	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> mrtur </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing RootBrowser for mrtur's preset");
	#	package_extract_dir("_mrtur/apps/rootbrowser", "/");
	#endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","totalcommander") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Total Commander");
		package_extract_dir("_mrturdroid/apps/totalcommander", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","adobeflash") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Adobe Flash Player");
		package_extract_dir("_mrturdroid/apps/adobeflash", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","youtube") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing YouTube");
		package_extract_dir("_mrturdroid/apps/youtube", "/");
	endif;

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","facebook") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing Facebook");
		package_extract_dir("_mrturdroid/apps/facebook", "/");
	endif;

	#if file_getprop("/tmp/aroma-data/mrturdroid.prop","8sms") == "1" then
	#	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing 8sms");
	#	delete("/system/app/Mms_Signed.apk");
	#	delete("/system/priv-app/Mms.apk");
	#	package_extract_dir("_mrturdroid/apps/8sms", "/");
	#endif;

	set_progress(0.90);

	# One more fix to logcat
	ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Syncing System");
	#set_perm(1000, 1000, 0771, "/data");
	#set_perm_recursive(1000, 1000, 0771, 0644, "/data/app");
	#set_perm_recursive(0, 0, 0771, 0660, "/data/data");
	run_program("/sbin/sync");

	set_progress(0.91);

	##################
	### DEBIAN OFF ###
	##################

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","debianoff") == "1" then
		ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Delete Debian");
		delete_recursive("/data/media/0/MrturDroid/debian");
		delete_recursive("/data/media/0/MrturDroid/tmp");
		delete_recursive("/data/media/0/MrturDroid/GitHub");
		delete_recursive("/data/media/0/MrturDroid/GitHubArchi");
		delete_recursive("/data/media/0/MrturDroid/System");	
		delete("/system/bin/adflash","/system/bin/adlinux","/system/bin/adflasharchi","/system/bin/debian","/system/bin/openssl","/system/bin/curl");
	endif;

	set_progress(0.92);


	####################
	### CROSSBREADER ###
	####################

	if file_getprop("/tmp/aroma-data/mrturdroid.prop","crossbreeder") == "1" then
			ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Installing CrossBreeder");
			
			# Freeze Fix
			unmount("/system");
			#unmount("/data");

			package_extract_dir("_mrturdroid/crossbreeder/setup", "/tmp"); 

			set_perm_recursive(0, 0, 0755, 0755, "/tmp");
			run_program("/sbin/busybox","chmod","-R","0755","/tmp");
			run_program("/sbin/busybox","chown","-R","0.0","/tmp");
			set_perm(0, 0, 0755, "/tmp/busybox");
			run_program("/tmp/busybox","chmod","-R","0755","/tmp");
			run_program("/tmp/busybox","chown","-R","0.0","/tmp");
			run_program("/tmp/busybox","mount","/system");
			run_program("/sbin/busybox","mount","/system");
			run_program("/tmp/busybox","mount","-o","rw,remount","/system");
			run_program("/sbin/busybox","mount","-o","rw,remount","/system");
			run_program("/tmp/busybox","mount","/data");
			run_program("/sbin/busybox","mount","/data");
			run_program("/tmp/busybox","mount","-o","rw,remount","/data");
			run_program("/sbin/busybox","mount","-o","rw,remount","/data");

			run_program("/tmp/busybox","rm","-fr","/system/etc/CrossBreeder");

			run_program("/tmp/busybox","mkdir","-p","/system/etc/CrossBreeder");
			run_program("/tmp/busybox","cp","-f","/tmp/tune2fs","/system/etc/CrossBreeder");
			#run_program("/tmp/busybox","cp","-f","/tmp/libiconv.so.2","/system/etc/CrossBreeder");
			run_program("/tmp/busybox","cp","-f","/tmp/busybox","/system/etc/CrossBreeder");
			set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");
			run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
			run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

			run_program("/tmp/busybox", "echo", "Restore", "started.");
			run_program("/tmp/restore_dnsmasq.sh");
			run_program("/tmp/busybox","echo","After","Restore");
			#run_program("/tmp/busybox","mv","-f","/system/etc/hosts","/system/etc/hosts.CBBAK");
			package_extract_dir("_mrturdroid/crossbreeder/system", "/system");
			run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
			#run_program("/tmp/busybox","cp","-f","/system/etc/CrossBreeder/dnsmasq","/system/bin/dnsmasq.bin");
			delete("/system/bin/dnsmasq.bin");
			run_program("/tmp/busybox", "ls", "-l", "/system/bin/dnsmasq");; 
			set_perm_recursive(0, 0, 0755, 0755, "/system/etc/CrossBreeder");

			run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder");
			run_program("/tmp/busybox","chmod","-R","0755","/system/etc/CrossBreeder");

			#set_perm_recursive(0, 0, 0711, 0444, "/system/etc/CrossBreeder/root");

			#run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/root");
			#run_program("/tmp/busybox","chmod","-R","0444","/system/etc/CrossBreeder/root");
			#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root");
			#run_program("/tmp/busybox","chmod","0711","/system/etc/CrossBreeder/root/errors");

			run_program("/tmp/busybox","chown","-R","0.0","/system/etc/CrossBreeder/dnrd_root");
			run_program("/tmp/busybox","chmod","-R","0644","/system/etc/CrossBreeder/dnrd_root");
			run_program("/tmp/busybox","chmod","0755","/system/etc/CrossBreeder/dnrd_root");

			#set_perm(0, 0, 0755, "/system/etc/init.d/zzCrossBreeder_initd");
			set_perm(0, 2000, 0755, "/system/xbin/haveged");
			delete("/system/xbin/CB_FileLock");
			set_perm(0, 0, 0755, "/system/etc/CrossBreeder/busybox");
			set_perm(0, 0, 0755, "/system/etc/CrossBreeder/dnrd.10053");
			set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCrossBreeder");
			set_perm(0, 0, 0755, "/system/etc/CrossBreeder/zzCHECK_NET_DNS");
			set_perm(0, 0, 0755, "/system/bin/dnsmasq");
			set_perm(0, 0, 0755, "/system/bin/dnsmasq_dhcp");
			#set_perm(0, 0, 0644, "/system/etc/CrossBreeder/dnsmasq-host");
			#set_perm(0, 0, 0644, "/system/etc/resolv.conf");
			set_perm(0, 0, 0644, "/system/etc/hosts");
			set_perm(0, 0, 0644, "/system/etc/CrossBreeder/hosts");
			delete("/system/etc/init.d/00CrossBreeder");
			delete("/system/etc/init.d/zzCrossBreeder");
			delete("/system/etc/init.d/zzCrossBreeder_initd");
			#delete("/system/etc/CrossBreeder/dnsmasq");

			#set_perm(0, 0, 0755, "/system/etc/install-recovery.sh");
			run_program("/tmp/busybox","mv","-f","/system/etc/install-recovery.sh.CBBAK","/system/etc/install-recovery.sh");
			run_program("/tmp/install_init_entries.sh");
			#run_program("/tmp/install_hw_entries.sh");
			#run_program("/sbin/busybox","mv","-f","/system/etc/hw_config.sh.CBBAK","/system/etc/hw_config.sh");
			run_program("/tmp/busybox","mv","-f","/system/bin/debuggerd.CBBAK","/system/bin/debuggerd");
			set_perm(0, 2000, 0755, "/system/bin/debuggerd");
			run_program("/tmp/install_debuggerd.sh");

			run_program("/tmp/busybox","mv","/system/xbin/rngd","/system/xbin/rngd.bak");
			run_program("/tmp/busybox","rm","-fr","/data/rngd.pid");
			run_program("/tmp/busybox","mkdir","/data/rngd.pid/");
			run_program("/tmp/busybox","chown","0:0","/data/rngd.pid");
			run_program("/tmp/busybox","chmod","-R","500","/data/rngd.pid");
			set_perm_recursive(0, 0, 0500, 0500, " /data/rngd.pid/ ");
			run_program("/tmp/busybox","mv","/system/xbin/qrngd","/system/xbin/qrngd.bak");
			run_program("/tmp/busybox","mv","/system/bin/qrngd","/system/bin/qrngd.bak");
			run_program("/tmp/REMOVE_TETHER_BOOST");
			run_program("/tmp/busybox","mv","-f","/system/etc/dnsmasq.conf.CBBAK","/system/etc/dnsmasq.conf");
			run_program("/tmp/busybox","sync");
			#run_program("/tmp/busybox","umount","/system");
			run_program("/tmp/busybox","cp","-f","/tmp/recovery.log","/data/recovery_cb.log");
			run_program("/tmp/busybox","sync");

			run_program("/tmp/busybox","umount","/data");
			#run_program("/tmp/busybox","umount","/cache");
			run_program("/tmp/busybox","umount","/sd-ext");

		# Freeze fix
		sleep (1);
		assert(mount("ext4", "EMMC", "/dev/block/platform/msm_sdcc.1/by-name/system", "/system") || ui_print("(system is mounted already)"));
		#assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p12", "/data") || ui_print("(data is mounted already)"));
	endif;
endif;
set_progress(0.98);


run_program("/sbin/sync");

set_progress(0.99);

ui_print("<b><#e0e0e0>root</#><#ffffff>@</#><#1082ac> MrturDroid </#><#ffffff>:~</#><#b0b0b0>#</#></b> Unmounting partitions");
assert(unmount("/data") || ui_print("(data is unmounted already)"));
assert(unmount("/system") || ui_print("(system is unmounted already)"));

ui_print("===================================");
ui_print("  MrturDroid Flashed Successfully  ");
ui_print("===================================");
#run_program("/sbin/busybox", "cp", "/tmp/recovery.log", "/sdcard/recovery.log");
set_progress(1.0);
